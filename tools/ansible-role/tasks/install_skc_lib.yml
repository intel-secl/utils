---
- name: ISECL - SKC LIBRARY | Create installation directory
  file:
    path: "/root/{{skclib_installer_name}}"
    state: directory   

- name: ISECL - SKC LIBRARY | Copy tar bundle and other files
  copy:
    src: "{{skclib_installer_file_src}}/{{item}}"
    dest: "/root/{{skclib_installer_name}}"
    mode: "u+x"
  loop:
    - skc_library.tar
    - skc_library.sha2
    - skclib_untar.sh

- name: ISECL - SKC LIBRARY | Untar the tar bundle
  shell: bash -x skclib_untar.sh
  args:
    chdir: /root/{{skclib_installer_name}}

- name: ISECL - SKC LIBRARY | Copy Create Roles configuration file
  template:
    src: "create_roles.conf.j2"
    dest: "/root/{{skclib_installer_name}}/create_roles.conf"

- name: ISECL - SKC LIBRARY | Run Create Roles Script
  shell: "set -o pipefail && ./skc_library_create_roles.sh 2>&1 | tee /root/skc_library_create_roles.log"
  args:
    chdir: /root/{{skclib_installer_name}}
    executable: /bin/bash

- name: ISECL - SKC LIBRARY | Create token for SKC Library user
  uri:
    url: "https://{{aas_enterprise}}:{{aas_port}}/aas/v1/token"
    body_format: json
    body:
       {
       "username": "{{skclib_admin_username}}",
       "password": "{{skclib_admin_password}}"
       }
    method: POST
    use_proxy: no
    validate_certs: no
    return_content: yes
  register: skc_library_bootstrap_token

- name: ISECL - SKC LIBRARY | Copy configuration file
  template:
    src: "skc_library.conf.j2"
    dest: "/root/{{skclib_installer_name}}/skc_library.conf"

- name: ISECL - SKC LIBRARY | Deploy SKC LIB
  shell: "set -o pipefail && ./deploy_skc_library.sh 2>&1 | tee /root/skc_library-install.log"  
  args:
    chdir: /root/{{skclib_installer_name}}
    executable: /bin/bash
