---
- name: ISECL - SGX AGENT | Create installation directory
  file:
    path: "/root/{{sgxagent_installer_name}}"
    state: directory     
            
- name: ISECL - SGX AGENT | Copy tar bundle  and other files
  copy:
    src: "{{sgxagent_installer_file_src}}/{{item}}"
    dest: "/root/{{sgxagent_installer_name}}"
    mode: "u+x"
  loop:
    - sgx_agent.tar
    - sgx_agent.sha2
    - agent_untar.sh

- name: ISECL - SGX AGENT | Untar the tar bundle
  shell: bash -x agent_untar.sh
  args:
    chdir: /root/{{sgxagent_installer_name}}

- name: ISECL - SGX AGENT | Copy configuration file
  template:
    src: "agent.conf.j2"
    dest: "/root/{{sgxagent_installer_name}}/agent.conf"

- name: ISECL - SGX AGENT | Remove SHVS URL from env file
  lineinfile:
          path: /root/{{sgxagent_installer_name}}/sgx_agent.env
          regexp: "SHVS_BASE_URL"
          state: absent
  when: setup == 'skc-no-orchestration'

- name: ISECL - SGX AGENT |Remove SHVS update interval from env file
  lineinfile:
          path: /root/{{sgxagent_installer_name}}/sgx_agent.env
          regexp: "SHVS_UPDATE_INTERVAL"
          state: absent
  when: setup == 'skc-no-orchestration'

- name: ISECL - SGX AGENT | Deploy SGX Agent
  shell: "set -o pipefail && ./deploy_sgx_agent.sh 2>&1 | tee /root/sgx_agent-install.log"
  args:
    chdir: /root/{{sgxagent_installer_name}}
    stdin: yes
    executable: /bin/bash
    creates: /opt/sgx_agent/bin/sgx_agent
  notify: start sgx_agent

- name: ISECL - SGX AGENT | Verify successful installation of SGX Agent
  shell: grep 'Installation completed successfully!' /root/sgx_agent-install.log
  register: successful_install
  failed_when: "'Installation completed successfully!' not in successful_install.stdout"

