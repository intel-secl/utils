{
	"info": {
		"_postman_id": "a0341317-45af-4790-bbbb-24b8ba67012e",
		"name": "Launch Time Protection – Container Confidentiality Docker",
		"description": "Launch Time Protection - Container Confidentiality allows Docker container images to be encrypted at rest, with key access tied to platform integrity attestation.  Because security attributes contained in the platform integrity attestation report are used to control access to the decryption keys, this feature provides both protection for at-rest data, IP, code, etc in Docker container images, and also enforcement of image-owner-controlled placement policies.  When decryption keys are released, they are sealed to the physical TPM of the host that was attested, meaning that only a server that has successfully met the policy requirements for the image can actually gain access. \n\nWorkload Confidentiality builds upon Platform Attestation to protect data in container images. At its core, this feature is about allowing an image owner to set policies that define the conditions under which their image will be allowed to run; if the policy conditions are met, the decryption key will be provided, and if the conditions are not met, the image will remain encrypted and inaccessible. This provides a level of enforcement beyond integration\nwith orchestrators, and protects sensitive data when the image is at rest.\n\nWorkload Encryption relies on Platform Attestation to define the security attributes of hosts. When a protected image is launched, the Workload Agent on the host launching the container image will detect the attempt as a function of the Docker Secure Overlay Driver in the case of containers) and use the Image ID to find the Image Flavor on the Workload Service. The Workload Service will retrieve the current trust report for the host launching the image, and use that report to make a key retrieval request to the key transfer URL retrieved from the image flavor. The key transfer URL refers to the URL to the image owner’s Key Broker Service, along with the ID of the key needed.\n\nIn a typical production deployment, a Cloud Service Provider would enable Intel® SecL-DC security controls by installing the Intel® SecL-DC applications (with the exception of the Key Broker and Workload Policy Manager), and ensuring each workload host to be Trusted (as per the Platform Integrity Attestation use case).\n\nThe owner of the workload image(s) to be protected (for example, the end customer of the CSP) must install a Key Broker Service (which must be available for network communication from the Workload Service hosted on the CSP), the Workload Policy Manager, and their own Authentication and Authorization Service and Certificate Management Service (these will manage authentication and certificates for the KBS and WPM).\n\nAny number of image owner customers with their own unique KBS/WPM/AAS/CMS deployments may protect images that can be run by a single CSP deployment.\n\nThe image owner will use the WPM to encrypt any image(s) to be protected; the WPM will automatically create a new image encryption key using the KBS, and will output the encrypted image and an Image Flavor. The image owner can then upload the encrypted image to the CSP’s image storage service, and then  upload the Image Flavor to the CSP-hosted WLS.\n\nWhen a compute host at the CSP attempts to launch a protected image, the secure docker daemon and secure docker plugin will detect the launch request and makes call to WLA for fetching the unsealed key, and further WLA will issue a key transfer request to the WLS. The WLS will use the image ID to retrieve the Image Flavor, which contains the key retrieval URL for that image. This URL is hosted on the KBS of the image owner (which is why the KBS must be available to network requests from the WLS). The WLS will access the HVS to retrieve the current Platform Integrity Attestation report for the host, and will use this report to make a key transfer request to the KBS at the key transfer URL.\n\nThe KBS will receive the request, verify that the Platform Integrity Attestation report is signed using a known SAML signing key (verifying that the report comes from a known and trusted HVS), and will then verify that the report shows that the host is trusted.\n\nIf these requirements are met, the KBS will use the host’s Binding Key (the public half of an asymmetric keypair generated by the host’s TPM and included in the attestation report) as a Key Encryption Key to seal the Image Encryption Key to the TPM of the host that was attested.\n\nWhen the host receives the response to the key request, it will unseal the Image Encryption Key using its TPM. Because the Key Encryption Key is unique to this host’s TPM, only the actual host that was attested will be able to gain access to the image.\n\nWith the Image Encryption Key, the host’s WLA send the Image Encryption Key to secure docker daemon the appropriate volume(s) in secure overaly2 driver for the image and begin the launch as normal\n\nThe WLA does not retain the key on disk; if/when the host is rebooted or the WLA is restarted, restarting the workloads based on protected images will trigger new key requests based on new Platform Integrity Attestation reports. In this way, if a host is compromised in a method detectable by the Platform Integrity feature, protected images will be unable to launch on this server.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authorization",
			"item": [
				{
					"name": "createToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4feb7c90-696d-4994-8dcd-07014b4cb7a7",
								"exec": [
									"pm.environment.set(\"bearerToken\", pm.response.text());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/jwt",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{globalAdminUser}}\",\n    \"password\": \"{{globalAdminPass}}\"\n}"
						},
						"url": {
							"raw": "https://{{aas}}:{{aasPort}}/aas/v1/token",
							"protocol": "https",
							"host": [
								"{{aas}}"
							],
							"port": "{{aasPort}}",
							"path": [
								"aas",
								"v1",
								"token"
							]
						},
						"description": "Creates a new bearer token that can be used in the Authorization header for other API \nrequests. Bearer token Authorization is not required when requesting token for Authservice \nadmin user. Authservice admin user bearer token should be provided in Authorization header \nwhen requesting bearer token for other users."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(Required)"
									},
									{
										"key": "Accept",
										"value": "application/jwt",
										"type": "text",
										"description": "(Required)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{globalAdminUser}}\",\n    \"password\": \"{{globalAdminPass}}\"\n}"
								},
								"url": {
									"raw": "https://{{aas}}:{{aasPort}}/aas/token",
									"protocol": "https",
									"host": [
										"{{aas}}"
									],
									"port": "{{aasPort}}",
									"path": [
										"aas",
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "jwt",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/jwt"
								},
								{
									"key": "Date",
									"value": "Thu, 13 Aug 2020 13:12:45 GMT"
								},
								{
									"key": "Content-Length",
									"value": "1366"
								}
							],
							"cookie": [],
							"body": "eyJhbGciOiJSUzM4NCIsImtpZCI6IjljMzU4ZGY0YmIyYTE5NGRkN2IyMGM0Mjg1M2Y3MTEwODQ5ZDNlM2YiLCJ0eXAiOiJKV1QifQ.eyJyb2xlcyI6W3sic2VydmljZSI6IkFBUyIsIm5hbWUiOiJBZG1pbmlzdHJhdG9yIn0seyJzZXJ2aWNlIjoiVEEiLCJuYW1lIjoiQWRtaW5pc3RyYXRvciJ9LHsic2VydmljZSI6IkhWUyIsIm5hbWUiOiJBZG1pbmlzdHJhdG9yIn0seyJzZXJ2aWNlIjoiQUgiLCJuYW1lIjoiQWRtaW5pc3RyYXRvciJ9LHsic2VydmljZSI6IktNUyIsIm5hbWUiOiJLZXlDUlVEIn0seyJzZXJ2aWNlIjoiV0xTIiwibmFtZSI6IkFkbWluaXN0cmF0b3IifV0sInBlcm1pc3Npb25zIjpbeyJzZXJ2aWNlIjoiQUFTIiwicnVsZXMiOlsiKjoqOioiXX0seyJzZXJ2aWNlIjoiQUgiLCJydWxlcyI6WyIqOio6KiJdfSx7InNlcnZpY2UiOiJIVlMiLCJydWxlcyI6WyIqOio6KiJdfSx7InNlcnZpY2UiOiJLTVMiLCJydWxlcyI6WyIqOio6KiJdfSx7InNlcnZpY2UiOiJUQSIsInJ1bGVzIjpbIio6KjoqIl19LHsic2VydmljZSI6IldMUyIsInJ1bGVzIjpbIio6KjoqIl19XSwiZXhwIjoxNTk3NDk3MTY1LCJpYXQiOjE1OTczMjQzMzUsImlzcyI6IkFBUyBKV1QgSXNzdWVyIiwic3ViIjoiZ2xvYmFsX2FkbWluX3VzZXIifQ.LOQUfFb2QHFShXWwm2u0lMyZ-SkVRbIHj7tobQz6t45tDOdN1dNupH2fn7wmZdo8VHMaH0oGvuhWPetqjfHXIGkNuyTnepSLldD0p8sbqLmo66cJx8MThuYKr9IyzbCbQ5pO1jdTrta8QxdW8a15DdjQ3UpcrjaCkBZ6AeX0xyL_UCfZWgcI9GKPWMcMVnsRpR3crjZUdr5HQTl_TR2a1dYp3YAUB_GigA9CG_N9nd4pVlKKGqVZYuuVlTD_kHrtAJGSUxaK88aWCczxI33TkHNoDof7D8GYDvqOxSBFGT32lJImsHBpWN185FDyVvSORXrwCI5YavgMBb8K5Q8lDMiWobFp4N7AzxCnNlXe54PAWk-ifUt39k3cT6o9OIqYT9n2oXx4EjNYZViTN7QWTm0e-rJKRgPtNpEe4ElC1-759be87xd_DwM1jXpwhAdmcYLOGMzOLXAjVNYaiZjRDG8phLT8MsrjODA4adJdIJVEwZA7Co2GU3TbUYlXNw2H"
						}
					]
				}
			],
			"description": "To make an API request to an Intel® SecL-DC service, an authentication\r\ntoken is now required. API requests must now include an Authorization\r\nheader with an appropriate token:\r\n\r\n```\r\nAuthorization: Bearer <token>\r\n```\r\n\r\nThe token is issued by the AAS and will expire after a set amount of time.\r\nThis token may be used with any Intel® SecL-DC service, and will carry the\r\nappropriate permissions for the role(s) assigned to the account the token was\r\ngenerated for.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Verify that hosts are registered and Trusted",
			"item": [
				{
					"name": "searchReport",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var report=pm.response.json()\r",
									"pm.environment.set(\"hostId\", report.reports[0].host_id)"
								],
								"type": "text/javascript",
								"id": "60390e24-67c3-4d12-92f5-1cf07bb8a0f7"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "d92d5d37-6eea-4925-acd3-0cce40067920"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "Enter your bearer token in the format **Bearer &lt;token&gt;**",
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}"
							},
							{
								"description": "(Required) ",
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{hvs}}:{{hvsPort}}/hvs/v2/reports?hostName={{tagentHostname}}&latestPerHost=true",
							"protocol": "https",
							"host": [
								"{{hvs}}"
							],
							"port": "{{hvsPort}}",
							"path": [
								"hvs",
								"v2",
								"reports"
							],
							"query": [
								{
									"key": "id",
									"value": "<uuid>",
									"description": "Report ID",
									"disabled": true
								},
								{
									"key": "hostId",
									"value": "<uuid>",
									"description": "host Id of the host. If this parameter is specified, it will return report only for active host with specified host id.",
									"disabled": true
								},
								{
									"key": "hostName",
									"value": "{{tagentHostname}}",
									"description": "Hostname of the host. If this parameter is specified, it will return report only for active host with specified host name."
								},
								{
									"key": "hostHardwareId",
									"value": "<uuid>",
									"description": "Hardware UUID of the host. If this parameter is specified, it will return report only for active host with specified host hardware uuid.",
									"disabled": true
								},
								{
									"key": "hostStatus",
									"value": "<string>",
									"description": "Current state of an active host.  A list of host states is defined in the description section of the HostStatus.",
									"disabled": true
								},
								{
									"key": "numberOfDays",
									"value": "<integer>",
									"description": "Results returned will be restricted to between the current date and number of days prior. This option will override other date options.\nmin: 0\nmax: 365\n",
									"disabled": true
								},
								{
									"key": "fromDate",
									"value": "<dateTime>",
									"description": "Results returned will be restricted to after this date. Currently the following ISO 8601 date formats are supported for date parameters\n    date                                   Ex: fromDate=2006-01-02\n    date+time                              Ex: fromDate=2006-01-02 15:04:05\n    date+time(with milli seconds)          Ex: fromDate=2006-01-02T15:04:05.000Z\n    date+time(with micro seconds)          Ex: fromDate=2006-01-02T15:04:05.000000Z\n",
									"disabled": true
								},
								{
									"key": "toDate",
									"value": "<dateTime>",
									"description": "Results returned will be restricted to before this date. Currently the following ISO 8601 date formats are supported for date parameters\n    date                                   Ex: toDate=2006-01-02\n    date+time                              Ex: toDate=2006-01-02 15:04:05\n    date+time(with milli seconds)          Ex: toDate=2006-01-02T15:04:05.000Z\n    date+time(with micro seconds)          Ex: toDate=2006-01-02T15:04:05.000000Z\n",
									"disabled": true
								},
								{
									"key": "latestPerHost",
									"value": "true",
									"description": "Returns only the latest report for each host. If latestPerHost is specified in conjuction with a date filter, it will return the latest report for within the specified date range per host."
								},
								{
									"key": "limit",
									"value": "2000",
									"description": "This limits the overall number of results (all hosts included).",
									"disabled": true
								}
							]
						},
						"description": "Searches for Reports.\n\n<b>Report</b></br>\n\nA report contains the trust information produced by the flavor verification process. It provides details on if the host is trusted and the flavors it matched, or came closest to matching.\nIf the host is untrusted, the report will include faults which describe why the host is untrusted. These faults allow for easy analysis and remediation of an untrusted\nresult.\n\nA report can be returned in JSON format, or it can be returned in SAML format. A SAML report is provided in XML format and contains the same trust information in a specific attribute format.\nA SAML report also includes a signature that can be verified by the Host Verification Service’s SAML public key.\n\nReports have a configurable validity period with default period of 24 hours or 86400 seconds. The Host Verification service has a background refresh process that queries for reports where the expiration time is within the next 5 minutes, and triggers generation of a new report for all results.\nThis is checked every 2 minutes by default, and can be configured by changing property in the configuration. In this way fresh reports are generated before older reports expire."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Enter your bearer token in the format **Bearer &lt;token&gt;**",
										"key": "Authorization",
										"value": "Bearer {{bearerToken}}"
									},
									{
										"description": "(Required) ",
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{hvs}}:{{hvsPort}}/hvs/v2/reports?hostName={{tagentHostname}}&latestPerHost=true",
									"protocol": "https",
									"host": [
										"{{hvs}}"
									],
									"port": "{{hvsPort}}",
									"path": [
										"hvs",
										"v2",
										"reports"
									],
									"query": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "Report ID",
											"disabled": true
										},
										{
											"key": "hostId",
											"value": "<uuid>",
											"description": "host Id of the host. If this parameter is specified, it will return report only for active host with specified host id.",
											"disabled": true
										},
										{
											"key": "hostName",
											"value": "{{tagentHostname}}",
											"description": "Hostname of the host. If this parameter is specified, it will return report only for active host with specified host name."
										},
										{
											"key": "hostHardwareId",
											"value": "<uuid>",
											"description": "Hardware UUID of the host. If this parameter is specified, it will return report only for active host with specified host hardware uuid.",
											"disabled": true
										},
										{
											"key": "hostStatus",
											"value": "<string>",
											"description": "Current state of an active host.  A list of host states is defined in the description section of the HostStatus.",
											"disabled": true
										},
										{
											"key": "numberOfDays",
											"value": "<integer>",
											"description": "Results returned will be restricted to between the current date and number of days prior. This option will override other date options.\nmin: 0\nmax: 365\n",
											"disabled": true
										},
										{
											"key": "fromDate",
											"value": "<dateTime>",
											"description": "Results returned will be restricted to after this date. Currently the following ISO 8601 date formats are supported for date parameters\n    date                                   Ex: fromDate=2006-01-02\n    date+time                              Ex: fromDate=2006-01-02 15:04:05\n    date+time(with milli seconds)          Ex: fromDate=2006-01-02T15:04:05.000Z\n    date+time(with micro seconds)          Ex: fromDate=2006-01-02T15:04:05.000000Z\n",
											"disabled": true
										},
										{
											"key": "toDate",
											"value": "<dateTime>",
											"description": "Results returned will be restricted to before this date. Currently the following ISO 8601 date formats are supported for date parameters\n    date                                   Ex: toDate=2006-01-02\n    date+time                              Ex: toDate=2006-01-02 15:04:05\n    date+time(with milli seconds)          Ex: toDate=2006-01-02T15:04:05.000Z\n    date+time(with micro seconds)          Ex: toDate=2006-01-02T15:04:05.000000Z\n",
											"disabled": true
										},
										{
											"key": "latestPerHost",
											"value": "true",
											"description": "Returns only the latest report for each host. If latestPerHost is specified in conjuction with a date filter, it will return the latest report for within the specified date range per host."
										},
										{
											"key": "limit",
											"value": "2000",
											"description": "This limits the overall number of results (all hosts included).",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Tue, 15 Sep 2020 09:25:19 GMT"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"reports\": [\n        {\n            \"id\": \"d4184357-4ec6-4791-af61-48ff90655cbd\",\n            \"trust_information\": {\n                \"OVERALL\": true,\n                \"flavors_trust\": {\n                    \"ASSET_TAG\": {\n                        \"trust\": true,\n                        \"rules\": [\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.TagCertificateTrusted\",\n                                    \"markers\": [\n                                        \"ASSET_TAG\"\n                                    ]\n                                },\n                                \"flavor_id\": \"7e852580-3d91-4cce-b8ef-358f9ba75c01\",\n                                \"trusted\": true\n                            },\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.AssetTagMatches\",\n                                    \"markers\": [\n                                        \"ASSET_TAG\"\n                                    ],\n                                    \"expected_tag\": \"VBK85hzc6OVUdGtWczgbAer0dNrbJz3O8jNwN28Cf8bzAT232vgVX9dgD5uO5CDl\",\n                                    \"tags\": {\n                                        \"Compliance\": \"PCI\",\n                                        \"Country\": \"USA\",\n                                        \"Department\": \"Finance\"\n                                    }\n                                },\n                                \"flavor_id\": \"7e852580-3d91-4cce-b8ef-358f9ba75c01\",\n                                \"trusted\": true\n                            },\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.FlavorTrusted\",\n                                    \"markers\": [\n                                        \"ASSET_TAG\"\n                                    ]\n                                },\n                                \"flavor_id\": \"7e852580-3d91-4cce-b8ef-358f9ba75c01\",\n                                \"trusted\": true\n                            }\n                        ]\n                    },\n                    \"HOST_UNIQUE\": {\n                        \"trust\": true,\n                        \"rules\": [\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.AikCertificateTrusted\",\n                                    \"markers\": [\n                                        \"HOST_UNIQUE\"\n                                    ]\n                                },\n                                \"flavor_id\": \"6d0a3cd3-112f-48ab-9fde-5078b35e97ea\",\n                                \"trusted\": true\n                            },\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.PcrEventLogIntegrity\",\n                                    \"markers\": [\n                                        \"HOST_UNIQUE\"\n                                    ],\n                                    \"expected_pcr\": {\n                                        \"digest_type\": \"com.intel.mtwilson.core.common.model.PcrSha1\",\n                                        \"index\": \"pcr_17\",\n                                        \"value\": \"34ead74f468b4f9e4af2e9b943b2c95e60e59ef6\",\n                                        \"pcr_bank\": \"SHA1\"\n                                    }\n                                },\n                                \"flavor_id\": \"6d0a3cd3-112f-48ab-9fde-5078b35e97ea\",\n                                \"trusted\": true\n                            },\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.PcrEventLogIntegrity\",\n                                    \"markers\": [\n                                        \"HOST_UNIQUE\"\n                                    ],\n                                    \"expected_pcr\": {\n                                        \"digest_type\": \"com.intel.mtwilson.core.common.model.PcrSha1\",\n                                        \"index\": \"pcr_18\",\n                                        \"value\": \"86da61107994a14c0d154fd87ca509f82377aa30\",\n                                        \"pcr_bank\": \"SHA1\"\n                                    }\n                                },\n                                \"flavor_id\": \"6d0a3cd3-112f-48ab-9fde-5078b35e97ea\",\n                                \"trusted\": true\n                            },\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.PcrEventLogIntegrity\",\n                                    \"markers\": [\n                                        \"HOST_UNIQUE\"\n                                    ],\n                                    \"expected_pcr\": {\n                                        \"digest_type\": \"com.intel.mtwilson.core.common.model.PcrSha256\",\n                                        \"index\": \"pcr_17\",\n                                        \"value\": \"ec0d4d2ae2eb3d80969a1c4505c07133ae58b00b38fe46c0a7b2dd598e0703cc\",\n                                        \"pcr_bank\": \"SHA256\"\n                                    }\n                                },\n                                \"flavor_id\": \"6d0a3cd3-112f-48ab-9fde-5078b35e97ea\",\n                                \"trusted\": true\n                            },\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.PcrEventLogIntegrity\",\n                                    \"markers\": [\n                                        \"HOST_UNIQUE\"\n                                    ],\n                                    \"expected_pcr\": {\n                                        \"digest_type\": \"com.intel.mtwilson.core.common.model.PcrSha256\",\n                                        \"index\": \"pcr_18\",\n                                        \"value\": \"d9e55bd1c570a6408fb1368f3663ae92747241fc4d2a3622cef0efadae284d75\",\n                                        \"pcr_bank\": \"SHA256\"\n                                    }\n                                },\n                                \"flavor_id\": \"6d0a3cd3-112f-48ab-9fde-5078b35e97ea\",\n                                \"trusted\": true\n                            },\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.PcrEventLogIncludes\",\n                                    \"markers\": [\n                                        \"HOST_UNIQUE\"\n                                    ],\n                                    \"expected_pcr\": {\n                                        \"digest_type\": \"com.intel.mtwilson.core.common.model.PcrSha1\",\n                                        \"index\": \"pcr_17\",\n                                        \"value\": \"34ead74f468b4f9e4af2e9b943b2c95e60e59ef6\",\n                                        \"pcr_bank\": \"SHA1\"\n                                    }\n                                },\n                                \"flavor_id\": \"6d0a3cd3-112f-48ab-9fde-5078b35e97ea\",\n                                \"trusted\": true\n                            },\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.PcrEventLogIncludes\",\n                                    \"markers\": [\n                                        \"HOST_UNIQUE\"\n                                    ],\n                                    \"expected_pcr\": {\n                                        \"digest_type\": \"com.intel.mtwilson.core.common.model.PcrSha1\",\n                                        \"index\": \"pcr_18\",\n                                        \"value\": \"86da61107994a14c0d154fd87ca509f82377aa30\",\n                                        \"pcr_bank\": \"SHA1\"\n                                    }\n                                },\n                                \"flavor_id\": \"6d0a3cd3-112f-48ab-9fde-5078b35e97ea\",\n                                \"trusted\": true\n                            },\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.PcrEventLogIncludes\",\n                                    \"markers\": [\n                                        \"HOST_UNIQUE\"\n                                    ],\n                                    \"expected_pcr\": {\n                                        \"digest_type\": \"com.intel.mtwilson.core.common.model.PcrSha256\",\n                                        \"index\": \"pcr_17\",\n                                        \"value\": \"ec0d4d2ae2eb3d80969a1c4505c07133ae58b00b38fe46c0a7b2dd598e0703cc\",\n                                        \"pcr_bank\": \"SHA256\"\n                                    }\n                                },\n                                \"flavor_id\": \"6d0a3cd3-112f-48ab-9fde-5078b35e97ea\",\n                                \"trusted\": true\n                            },\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.PcrEventLogIncludes\",\n                                    \"markers\": [\n                                        \"HOST_UNIQUE\"\n                                    ],\n                                    \"expected_pcr\": {\n                                        \"digest_type\": \"com.intel.mtwilson.core.common.model.PcrSha256\",\n                                        \"index\": \"pcr_18\",\n                                        \"value\": \"d9e55bd1c570a6408fb1368f3663ae92747241fc4d2a3622cef0efadae284d75\",\n                                        \"pcr_bank\": \"SHA256\"\n                                    }\n                                },\n                                \"flavor_id\": \"6d0a3cd3-112f-48ab-9fde-5078b35e97ea\",\n                                \"trusted\": true\n                            },\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.FlavorTrusted\",\n                                    \"markers\": [\n                                        \"HOST_UNIQUE\"\n                                    ]\n                                },\n                                \"flavor_id\": \"6d0a3cd3-112f-48ab-9fde-5078b35e97ea\",\n                                \"trusted\": true\n                            }\n                        ]\n                    },\n                    \"OS\": {\n                        \"trust\": true,\n                        \"rules\": [\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.AikCertificateTrusted\",\n                                    \"markers\": [\n                                        \"OS\"\n                                    ]\n                                },\n                                \"flavor_id\": \"8a4d7679-6e0a-4c18-9c2a-c8ab6ca6b5fd\",\n                                \"trusted\": true\n                            },\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.PcrEventLogIntegrity\",\n                                    \"markers\": [\n                                        \"OS\"\n                                    ],\n                                    \"expected_pcr\": {\n                                        \"digest_type\": \"com.intel.mtwilson.core.common.model.PcrSha1\",\n                                        \"index\": \"pcr_17\",\n                                        \"value\": \"34ead74f468b4f9e4af2e9b943b2c95e60e59ef6\",\n                                        \"pcr_bank\": \"SHA1\"\n                                    }\n                                },\n                                \"flavor_id\": \"8a4d7679-6e0a-4c18-9c2a-c8ab6ca6b5fd\",\n                                \"trusted\": true\n                            },\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.PcrEventLogIntegrity\",\n                                    \"markers\": [\n                                        \"OS\"\n                                    ],\n                                    \"expected_pcr\": {\n                                        \"digest_type\": \"com.intel.mtwilson.core.common.model.PcrSha256\",\n                                        \"index\": \"pcr_17\",\n                                        \"value\": \"ec0d4d2ae2eb3d80969a1c4505c07133ae58b00b38fe46c0a7b2dd598e0703cc\",\n                                        \"pcr_bank\": \"SHA256\"\n                                    }\n                                },\n                                \"flavor_id\": \"8a4d7679-6e0a-4c18-9c2a-c8ab6ca6b5fd\",\n                                \"trusted\": true\n                            },\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.PcrEventLogIncludes\",\n                                    \"markers\": [\n                                        \"OS\"\n                                    ],\n                                    \"expected_pcr\": {\n                                        \"digest_type\": \"com.intel.mtwilson.core.common.model.PcrSha1\",\n                                        \"index\": \"pcr_17\",\n                                        \"value\": \"34ead74f468b4f9e4af2e9b943b2c95e60e59ef6\",\n                                        \"pcr_bank\": \"SHA1\"\n                                    }\n                                },\n                                \"flavor_id\": \"8a4d7679-6e0a-4c18-9c2a-c8ab6ca6b5fd\",\n                                \"trusted\": true\n                            },\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.PcrEventLogIncludes\",\n                                    \"markers\": [\n                                        \"OS\"\n                                    ],\n                                    \"expected_pcr\": {\n                                        \"digest_type\": \"com.intel.mtwilson.core.common.model.PcrSha256\",\n                                        \"index\": \"pcr_17\",\n                                        \"value\": \"ec0d4d2ae2eb3d80969a1c4505c07133ae58b00b38fe46c0a7b2dd598e0703cc\",\n                                        \"pcr_bank\": \"SHA256\"\n                                    }\n                                },\n                                \"flavor_id\": \"8a4d7679-6e0a-4c18-9c2a-c8ab6ca6b5fd\",\n                                \"trusted\": true\n                            },\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.FlavorTrusted\",\n                                    \"markers\": [\n                                        \"OS\"\n                                    ]\n                                },\n                                \"flavor_id\": \"8a4d7679-6e0a-4c18-9c2a-c8ab6ca6b5fd\",\n                                \"trusted\": true\n                            }\n                        ]\n                    },\n                    \"PLATFORM\": {\n                        \"trust\": true,\n                        \"rules\": [\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.AikCertificateTrusted\",\n                                    \"markers\": [\n                                        \"PLATFORM\"\n                                    ]\n                                },\n                                \"flavor_id\": \"83effcf6-fa99-4416-ba69-5fff450ae0ff\",\n                                \"trusted\": true\n                            },\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.PcrMatchesConstant\",\n                                    \"markers\": [\n                                        \"PLATFORM\"\n                                    ],\n                                    \"expected_pcr\": {\n                                        \"digest_type\": \"com.intel.mtwilson.core.common.model.PcrSha1\",\n                                        \"index\": \"pcr_0\",\n                                        \"value\": \"308c314172d79c8ed0c91d91eb6d6b78a2a451a0\",\n                                        \"pcr_bank\": \"SHA1\"\n                                    }\n                                },\n                                \"flavor_id\": \"83effcf6-fa99-4416-ba69-5fff450ae0ff\",\n                                \"trusted\": true\n                            },\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.PcrMatchesConstant\",\n                                    \"markers\": [\n                                        \"PLATFORM\"\n                                    ],\n                                    \"expected_pcr\": {\n                                        \"digest_type\": \"com.intel.mtwilson.core.common.model.PcrSha256\",\n                                        \"index\": \"pcr_0\",\n                                        \"value\": \"b8b8a376ab2cc30632b544aaee67b464a8bff184f1f09698fa5b7470074510b3\",\n                                        \"pcr_bank\": \"SHA256\"\n                                    }\n                                },\n                                \"flavor_id\": \"83effcf6-fa99-4416-ba69-5fff450ae0ff\",\n                                \"trusted\": true\n                            },\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.PcrEventLogEqualsExcluding\",\n                                    \"markers\": [\n                                        \"PLATFORM\"\n                                    ],\n                                    \"expected_pcr\": {\n                                        \"digest_type\": \"com.intel.mtwilson.core.common.model.PcrSha1\",\n                                        \"index\": \"pcr_17\",\n                                        \"value\": \"34ead74f468b4f9e4af2e9b943b2c95e60e59ef6\",\n                                        \"pcr_bank\": \"SHA1\"\n                                    }\n                                },\n                                \"flavor_id\": \"83effcf6-fa99-4416-ba69-5fff450ae0ff\",\n                                \"trusted\": true\n                            },\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.PcrEventLogEqualsExcluding\",\n                                    \"markers\": [\n                                        \"PLATFORM\"\n                                    ],\n                                    \"expected_pcr\": {\n                                        \"digest_type\": \"com.intel.mtwilson.core.common.model.PcrSha1\",\n                                        \"index\": \"pcr_18\",\n                                        \"value\": \"86da61107994a14c0d154fd87ca509f82377aa30\",\n                                        \"pcr_bank\": \"SHA1\"\n                                    }\n                                },\n                                \"flavor_id\": \"83effcf6-fa99-4416-ba69-5fff450ae0ff\",\n                                \"trusted\": true\n                            },\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.PcrEventLogEqualsExcluding\",\n                                    \"markers\": [\n                                        \"PLATFORM\"\n                                    ],\n                                    \"expected_pcr\": {\n                                        \"digest_type\": \"com.intel.mtwilson.core.common.model.PcrSha256\",\n                                        \"index\": \"pcr_17\",\n                                        \"value\": \"ec0d4d2ae2eb3d80969a1c4505c07133ae58b00b38fe46c0a7b2dd598e0703cc\",\n                                        \"pcr_bank\": \"SHA256\"\n                                    }\n                                },\n                                \"flavor_id\": \"83effcf6-fa99-4416-ba69-5fff450ae0ff\",\n                                \"trusted\": true\n                            },\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.PcrEventLogEqualsExcluding\",\n                                    \"markers\": [\n                                        \"PLATFORM\"\n                                    ],\n                                    \"expected_pcr\": {\n                                        \"digest_type\": \"com.intel.mtwilson.core.common.model.PcrSha256\",\n                                        \"index\": \"pcr_18\",\n                                        \"value\": \"d9e55bd1c570a6408fb1368f3663ae92747241fc4d2a3622cef0efadae284d75\",\n                                        \"pcr_bank\": \"SHA256\"\n                                    }\n                                },\n                                \"flavor_id\": \"83effcf6-fa99-4416-ba69-5fff450ae0ff\",\n                                \"trusted\": true\n                            },\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.PcrEventLogIntegrity\",\n                                    \"markers\": [\n                                        \"PLATFORM\"\n                                    ],\n                                    \"expected_pcr\": {\n                                        \"digest_type\": \"com.intel.mtwilson.core.common.model.PcrSha1\",\n                                        \"index\": \"pcr_17\",\n                                        \"value\": \"34ead74f468b4f9e4af2e9b943b2c95e60e59ef6\",\n                                        \"pcr_bank\": \"SHA1\"\n                                    }\n                                },\n                                \"flavor_id\": \"83effcf6-fa99-4416-ba69-5fff450ae0ff\",\n                                \"trusted\": true\n                            },\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.PcrEventLogIntegrity\",\n                                    \"markers\": [\n                                        \"PLATFORM\"\n                                    ],\n                                    \"expected_pcr\": {\n                                        \"digest_type\": \"com.intel.mtwilson.core.common.model.PcrSha1\",\n                                        \"index\": \"pcr_18\",\n                                        \"value\": \"86da61107994a14c0d154fd87ca509f82377aa30\",\n                                        \"pcr_bank\": \"SHA1\"\n                                    }\n                                },\n                                \"flavor_id\": \"83effcf6-fa99-4416-ba69-5fff450ae0ff\",\n                                \"trusted\": true\n                            },\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.PcrEventLogIntegrity\",\n                                    \"markers\": [\n                                        \"PLATFORM\"\n                                    ],\n                                    \"expected_pcr\": {\n                                        \"digest_type\": \"com.intel.mtwilson.core.common.model.PcrSha256\",\n                                        \"index\": \"pcr_17\",\n                                        \"value\": \"ec0d4d2ae2eb3d80969a1c4505c07133ae58b00b38fe46c0a7b2dd598e0703cc\",\n                                        \"pcr_bank\": \"SHA256\"\n                                    }\n                                },\n                                \"flavor_id\": \"83effcf6-fa99-4416-ba69-5fff450ae0ff\",\n                                \"trusted\": true\n                            },\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.PcrEventLogIntegrity\",\n                                    \"markers\": [\n                                        \"PLATFORM\"\n                                    ],\n                                    \"expected_pcr\": {\n                                        \"digest_type\": \"com.intel.mtwilson.core.common.model.PcrSha256\",\n                                        \"index\": \"pcr_18\",\n                                        \"value\": \"d9e55bd1c570a6408fb1368f3663ae92747241fc4d2a3622cef0efadae284d75\",\n                                        \"pcr_bank\": \"SHA256\"\n                                    }\n                                },\n                                \"flavor_id\": \"83effcf6-fa99-4416-ba69-5fff450ae0ff\",\n                                \"trusted\": true\n                            },\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.FlavorTrusted\",\n                                    \"markers\": [\n                                        \"PLATFORM\"\n                                    ]\n                                },\n                                \"flavor_id\": \"83effcf6-fa99-4416-ba69-5fff450ae0ff\",\n                                \"trusted\": true\n                            }\n                        ]\n                    },\n                    \"SOFTWARE\": {\n                        \"trust\": true,\n                        \"rules\": [\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.XmlMeasurementsDigestEquals\",\n                                    \"markers\": [\n                                        \"SOFTWARE\"\n                                    ]\n                                },\n                                \"flavor_id\": \"fe122b08-eac4-4811-a83a-3f2f96bc80cd\",\n                                \"trusted\": true\n                            },\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.XmlMeasurementLogIntegrity\",\n                                    \"markers\": [\n                                        \"SOFTWARE\"\n                                    ],\n                                    \"flavor_id\": \"fe122b08-eac4-4811-a83a-3f2f96bc80cd\",\n                                    \"flavor_name\": \"ISecL_Default_Application_Flavor_v3.0_TPM2.0\",\n                                    \"expected_value\": \"77f6d72143da6fc659b8e6a49748e138255baefc376e72b88fcc56704a9c490b61470e1f5575596141a59b0bf11fdcbf\"\n                                },\n                                \"flavor_id\": \"fe122b08-eac4-4811-a83a-3f2f96bc80cd\",\n                                \"trusted\": true\n                            },\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.XmlMeasurementLogEquals\",\n                                    \"markers\": [\n                                        \"SOFTWARE\"\n                                    ],\n                                    \"flavor_id\": \"fe122b08-eac4-4811-a83a-3f2f96bc80cd\",\n                                    \"flavor_name\": \"ISecL_Default_Application_Flavor_v3.0_TPM2.0\",\n                                    \"expected_measurements\": [\n                                        {\n                                            \"type\": \"fileMeasurementType\",\n                                            \"value\": \"6235391f9a0bd72ee2ba0a09fd3742a58c5353fc2fc7482f08ecb69a8283cb1182083b360021912e4b09be4359b55778\",\n                                            \"Path\": \"/opt/tbootxm/bin/measure\"\n                                        },\n                                        {\n                                            \"type\": \"fileMeasurementType\",\n                                            \"value\": \"0f47a757c86e91a3a175cd6ee597a67f84c6fec95936d7f2c9316b0944c27cb72f84e32c587adb456b94e64486d14242\",\n                                            \"Path\": \"/opt/trustagent/bin/module_analysis_da_tcg.sh\"\n                                        },\n                                        {\n                                            \"type\": \"fileMeasurementType\",\n                                            \"value\": \"2791f12e447bbc88e25020ddbf5a2a8693443c5ca509c0f0020a8c7bed6c813cd62cb4c250c88491f5d540343032addc\",\n                                            \"Path\": \"/opt/tbootxm/mkinitrd_files/setup-measure_host.sh\"\n                                        },\n                                        {\n                                            \"type\": \"fileMeasurementType\",\n                                            \"value\": \"e2fc98a9292838a511d98348b29ba82e73c839cbb02051250c8a8ff85067930b5af2b22de4576793533259fad985df4a\",\n                                            \"Path\": \"/opt/tbootxm/dracut_files/install\"\n                                        },\n                                        {\n                                            \"type\": \"fileMeasurementType\",\n                                            \"value\": \"1be6ce8c3a4c3f5592fffc905d62dcfb0ed3bf1cb2ae3ed7376d88cd4dd268f22a69404e2486e948fd3ab52ea6fbb95c\",\n                                            \"Path\": \"/opt/tbootxm/bin/configure_host.sh\"\n                                        },\n                                        {\n                                            \"type\": \"fileMeasurementType\",\n                                            \"value\": \"b95c831b66c41204b117c97544d1af30828e3cf2ef7ba3ee0c970a20d4f08acfc7c0a530d3b3b883ddea7d5300087262\",\n                                            \"Path\": \"/opt/tbootxm/bin/tpmextend\"\n                                        },\n                                        {\n                                            \"type\": \"fileMeasurementType\",\n                                            \"value\": \"053714212db480f81ceca687a16d130b941afaa14a8a60f7763171619533254427b063cb73ac4d3aa9c59ef6831a8d87\",\n                                            \"Path\": \"/opt/trustagent/bin/tagent\"\n                                        },\n                                        {\n                                            \"type\": \"fileMeasurementType\",\n                                            \"value\": \"63648dde7ef979e0ce32fbb4fc2087bf861ca0c9a2755d13e2135eaecf37e9e43e7523ac923d8073b0fe6159da6aba4a\",\n                                            \"Path\": \"/opt/tbootxm/bin/measure_host\"\n                                        },\n                                        {\n                                            \"type\": \"fileMeasurementType\",\n                                            \"value\": \"430725e0cb08b290897aa850124f765ae0bdf385e6d3b741cdc5ff7dc72119958fbcce3f62d6b6d63c4a10c70c18ca98\",\n                                            \"Path\": \"/opt/tbootxm/initrd_hooks/tcb\"\n                                        },\n                                        {\n                                            \"type\": \"fileMeasurementType\",\n                                            \"value\": \"cb6754eb6f2e39e43d420682bc91c83b38d63808b603c068a3087affb856703d3ae564892ac837cd0d4453e41b2a228e\",\n                                            \"Path\": \"/opt/tbootxm/lib/update_menuentry.pl\"\n                                        },\n                                        {\n                                            \"type\": \"fileMeasurementType\",\n                                            \"value\": \"7450bc939548eafc4a3ba9734ad1f96e46e1f46a40e4d12ad5b5f6b5eb2baf1597ade91edb035d8b5c1ecc38bde7ee59\",\n                                            \"Path\": \"/opt/tbootxm/bin/tboot-xm-uninstall.sh\"\n                                        },\n                                        {\n                                            \"type\": \"fileMeasurementType\",\n                                            \"value\": \"2327e72fa469bada099c5956f851817b0c8fa2d6c43089566cacd0f573bf62e7e8dd10a2c339205fb16c3956db6518a9\",\n                                            \"Path\": \"/opt/trustagent/bin/module_analysis.sh\"\n                                        },\n                                        {\n                                            \"type\": \"fileMeasurementType\",\n                                            \"value\": \"2a99c3e80e99d495a6b8cce8e7504af511201f05fcb40b766a41e6af52a54a34ea9fba985d2835aef929e636ad2a6f1d\",\n                                            \"Path\": \"/opt/trustagent/bin/module_analysis_da.sh\"\n                                        },\n                                        {\n                                            \"type\": \"fileMeasurementType\",\n                                            \"value\": \"6502f614164b7528480deb18256b40cd2e4e9c7cbc32ebc4dcbd87c1ad9508885b628d83e56d22e106b1dcc8142690f6\",\n                                            \"Path\": \"/opt/tbootxm/bin/functions.sh\"\n                                        },\n                                        {\n                                            \"type\": \"fileMeasurementType\",\n                                            \"value\": \"79770fb02e5a8f6b51678bde4d017f23ac811b1a9f89182a8b7f9871990dbbc07fd9a0578275c405a02ac5223412095e\",\n                                            \"Path\": \"/opt/tbootxm/lib/create_menuentry.pl\"\n                                        },\n                                        {\n                                            \"type\": \"fileMeasurementType\",\n                                            \"value\": \"0a27a9e0bff117f30481dcab29bb5120f474f2c3ea10fa2449a9b05123c5d8ce31989fcd986bfa73e6c25c70202c50cb\",\n                                            \"Path\": \"/opt/tbootxm/dracut_files/module-setup.sh\"\n                                        },\n                                        {\n                                            \"type\": \"fileMeasurementType\",\n                                            \"value\": \"267364030690528119b5559974fba99852c19131dd4b5555ab12ab6cb44a6fb4d7e80b52fc54cded776e64cab0108d15\",\n                                            \"Path\": \"/opt/tbootxm/lib/libwml.so\"\n                                        },\n                                        {\n                                            \"type\": \"fileMeasurementType\",\n                                            \"value\": \"6f5949b86d3bf3387eaff8a18bb5d64e60daff9a2568d0c7eb90adde515620b9e5e9cd7d908805c6886cd178e7b382e1\",\n                                            \"Path\": \"/opt/tbootxm/dracut_files/check\"\n                                        },\n                                        {\n                                            \"type\": \"fileMeasurementType\",\n                                            \"value\": \"4708ed8233a81d6a17b2c4b74b955f27612d2cc04730ad8919618964209ce885cea9011e00236de56a2239a524044db4\",\n                                            \"Path\": \"/opt/tbootxm/bin/generate_initrd.sh\"\n                                        },\n                                        {\n                                            \"type\": \"fileMeasurementType\",\n                                            \"value\": \"baf4f9b63ab9bb1e8616e3fb037580e38c0ebd4073b3b7b645e0e37cc7f0588f4c5ed8b744e9be7689aa78d23df8ec4c\",\n                                            \"Path\": \"/opt/tbootxm/lib/remove_menuentry.pl\"\n                                        },\n                                        {\n                                            \"type\": \"directoryMeasurementType\",\n                                            \"value\": \"b0d5cba0bb12d69d8dd3e92bdad09d093a34dd4ea30aea63fb31b9c26d9cbf0e84016fa9a80843b473e1493a427aa63a\",\n                                            \"Path\": \"/opt/tbootxm/bin\",\n                                            \"Include\": \".*\"\n                                        },\n                                        {\n                                            \"type\": \"directoryMeasurementType\",\n                                            \"value\": \"3519466d871c395ce1f5b073a4a3847b6b8f0b3e495337daa0474f967aeecd48f699df29a4d106288f3b0d1705ecef75\",\n                                            \"Path\": \"/opt/trustagent/bin\",\n                                            \"Include\": \".*\"\n                                        },\n                                        {\n                                            \"type\": \"directoryMeasurementType\",\n                                            \"value\": \"1d9c8eb15a49ea65fb96f2b919c42d5dfd30f4e4c1618205287345aeb4669d18113fe5bc87b033aeef2aeadc2e063232\",\n                                            \"Path\": \"/opt/tbootxm/dracut_files\",\n                                            \"Include\": \".*\"\n                                        },\n                                        {\n                                            \"type\": \"directoryMeasurementType\",\n                                            \"value\": \"77b913422748a8e62f0720d739d54b2fa7856ebeb9e76fab75c41c375f2ad77b7b9ec5849b20d857e24a894a615d2de7\",\n                                            \"Path\": \"/opt/tbootxm/initrd_hooks\",\n                                            \"Include\": \".*\"\n                                        },\n                                        {\n                                            \"type\": \"directoryMeasurementType\",\n                                            \"value\": \"6928eb666f6971af5da42ad785588fb9464465b12c78f7279f46f9f8e04ae428d4872e7813671a1390cc8ed433366247\",\n                                            \"Path\": \"/opt/tbootxm/mkinitrd_files\",\n                                            \"Include\": \".*\"\n                                        },\n                                        {\n                                            \"type\": \"directoryMeasurementType\",\n                                            \"value\": \"b03eb9d3b6fa0d338fd4ef803a277d523ab31db5c27186a283dd8d1fe0e7afca9bf26b31b1099833b0ba398dbe3c02fb\",\n                                            \"Path\": \"/opt/tbootxm/lib\",\n                                            \"Include\": \".*\"\n                                        }\n                                    ]\n                                },\n                                \"flavor_id\": \"fe122b08-eac4-4811-a83a-3f2f96bc80cd\",\n                                \"trusted\": true\n                            },\n                            {\n                                \"rule\": {\n                                    \"rule_name\": \"com.intel.mtwilson.core.verifier.policy.rule.FlavorTrusted\",\n                                    \"markers\": [\n                                        \"SOFTWARE\"\n                                    ]\n                                },\n                                \"flavor_id\": \"fe122b08-eac4-4811-a83a-3f2f96bc80cd\",\n                                \"trusted\": true\n                            }\n                        ]\n                    }\n                }\n            },\n            \"host_id\": \"a3b52c84-3856-4113-bec9-87b858100585\",\n            \"host_info\": {\n                \"os_name\": \"RedHatEnterprise\",\n                \"os_version\": \"8.2\",\n                \"bios_version\": \"<bios_version>\",\n                \"vmm_name\": \"Docker\",\n                \"vmm_version\": \"19.03.5\",\n                \"processor_info\": \"<processor_info>\",\n                \"host_name\": \"{{tagentHostname}}\",\n                \"bios_name\": \"Intel Corporation\",\n                \"hardware_uuid\": \"<hardware_uuid>\",\n                \"process_flags\": \"<processor_flags>\",\n                \"no_of_sockets\": \"2\",\n                \"tboot_installed\": \"true\",\n                \"hardware_features\": {\n                    \"TXT\": {\n                        \"enabled\": \"true\"\n                    },\n                    \"TPM\": {\n                        \"enabled\": \"true\",\n                        \"meta\": {\n                            \"tpm_version\": \"2.0\",\n                            \"pcr_banks\": \"SHA1_SHA256\"\n                        }\n                    }\n                },\n                \"installed_components\": [\n                    \"tagent\"\n                ]\n            },\n            \"created\": \"2020-09-15T09:24:57.571095Z\",\n            \"expiration\": \"2020-09-16T09:24:57.571096Z\"\n        }\n    ]\n}"
						}
					]
				}
			],
			"description": "To begin verify that all prerequisite steps were completed.\r\n\r\nVerify that the response lists all of the hosts, and that each Report shows “OVERALL=true”. \r\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "dc297c8d-919b-404c-be1a-9a12fbdf8e2a"
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "e26ea499-9dd1-47c4-b555-bb08ebe7883a"
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Importing Verification Service Certificates",
			"item": [
				{
					"name": "Import Saml Certificate",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) Content-Type header",
								"key": "Content-Type",
								"value": "application/x-pem-file"
							},
							{
								"description": "(Required) Accept header",
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "-----BEGIN CERTIFICATE-----\r\nMIID/DCCAmSgAwIBAgIBCDANBgkqhkiG9w0BAQwFADBQMQswCQYDVQQGEwJVUzEL\r\nMAkGA1UECBMCU0YxCzAJBgNVBAcTAlNDMQ4wDAYDVQQKEwVJTlRFTDEXMBUGA1UE\r\nAxMOQ01TIFNpZ25pbmcgQ0EwHhcNMjAxMTEwMDYwODMyWhcNMjExMTEwMDYwODMy\r\nWjAfMR0wGwYDVQQDExRIVlMgU0FNTCBDZXJ0aWZpY2F0ZTCCAaIwDQYJKoZIhvcN\r\nAQEBBQADggGPADCCAYoCggGBALG5M2nM1ScmjSnRRrJRdE754ko3up3k1th4Cmk/\r\nYTeIsJvJYCO8xbCsox/tgoPSTTCj12PnZjByOB6KUVx3D6jb8iQvT7PQTg71GCP5\r\n77120OJ3ktw8W2jdMFM3fSEvSGo7e3xA7OOqFyKwpMxAByxGTxF3s0QsxoyPGI+e\r\ncGBz9oZYSqsBl0ZvU63+5EPn7GDeh0K39JeL+GWGlGdPzRrPKP8PU/W98GHcdqQ1\r\nv2IeROIJcWWtJIQgo8uL7Lzd2UIZ9qjgeTcYNyOSDGfY+wB1w9WCE3h05uL4JX2Z\r\nlj9zUKrF3pw1wBLahl4X28GZ/WkZoaC430BHMLm6EJtOZDMYI/PuoVxTcZ75mnVN\r\nRKaDCbopmVleKwDPijU541dE84yCZx0E4SmmQfgCoXpJZczQSpInDbcGJOP8cFIe\r\nHumCtgUJ5OR7ikoJGskP/feAYsOOYhl6AigNshNWhHFO1KwTS0rXIp5rqYDtC3Y9\r\nInc7oDzNteTMIqVfA5e+EjtOvwIDAQABoxIwEDAOBgNVHQ8BAf8EBAMCBsAwDQYJ\r\nKoZIhvcNAQEMBQADggGBAJGdaLl1R4sx2tNt/yvaMVWYGxm1Tm7fi0Ll876/nRjJ\r\nnHN64FtTzUkKsD4pMud9RWlMY2OcIJrPN7BwhpZo9l1P/ZcMsXWxJTN6CPcAC8FP\r\nO5KDZCLv7z3mxzVnntSzIqSkLy7ZqUGxEjk7tNRnFiyLUPnD9k7YLH30BlHwuKPt\r\nfSuQ2Ybpj8ZD88+skUXe63oDm7sySSxfLtgfyKDjRH8Nk8loKl+reCaeP79u+3dG\r\nvpeXFKY0zGVs5dXta5luZJFJT0JbxosHNqZ5s7z7T5uKiFYkNzaXpIrJyR4hh14U\r\nmw46atGq1x3qJN3feyZ4v0c6HgbRalv29FYBTIxfjdTqcw4j7OjaJjZIiPpNsrcE\r\nrAYfJpNbOs9k0pGad5vnwFXvj5pXSlhKYpQTxXhFHrVCvTIKFtpPZ0Oy+9lJGLUS\r\nMDK1I/s2NHmiASY1f6HrVMvLgR5llzsE8b49hD9OxwuC9u6QmK21xGn3nTMqn59o\r\nSp6d3ucIM9wUmWXlJivFDQ==\r\n-----END CERTIFICATE-----\r\n-----BEGIN CERTIFICATE-----\r\nMIIENTCCAp2gAwIBAgIBAzANBgkqhkiG9w0BAQwFADBHMQswCQYDVQQGEwJVUzEL\r\nMAkGA1UECBMCU0YxCzAJBgNVBAcTAlNDMQ4wDAYDVQQKEwVJTlRFTDEOMAwGA1UE\r\nAxMFQ01TQ0EwHhcNMjAxMTEwMDU0OTAyWhcNMjUxMTEwMDU0OTAyWjBQMQswCQYD\r\nVQQGEwJVUzELMAkGA1UECBMCU0YxCzAJBgNVBAcTAlNDMQ4wDAYDVQQKEwVJTlRF\r\nTDEXMBUGA1UEAxMOQ01TIFNpZ25pbmcgQ0EwggGiMA0GCSqGSIb3DQEBAQUAA4IB\r\njwAwggGKAoIBgQDa6v44xjW8AP+Zukv4+N5cV683OMmPcuS+igkD2md5FVXVS18T\r\nDERsNV2+LsWoq1e7wnfTAVw3+JSDStm4Tm4NTgOGQ4x/gSP0RuJPk/BvcLqzZTMQ\r\n3Vnt24COO5nZMAGhKS2wXXwzjSo/253RKh0DOLi5bdBTF8vvCKQHh8evC7oOfwMX\r\nl03kc8HlKF9i/MfzARuOY8/oLt5MbcMvSWwTL2a/3sf7pwrya3lYahl1CpFgqeO9\r\nFxFN1fjyhYSDhiwbii0NHK2rbWADsUBmAxb66quxgWErWskUEdCIdCN15wWr15mI\r\nNDHBZch1gRwiJzsFlKJD26CEGGGVmDrtI/k/0TMbEBxMQ2tcxy3pgzO8YXFgKS1p\r\nkesLHHfFGv9hBI71+p7Rtxopui93vekFhwwweF80PZ1Q3JaqpHfT0AbKcmL7VM9y\r\nFiXBYCQyN54grzluPXVKjinZJ+Ik9Y1eEqg7rhDC/I5DrAWfrcdtCdv0bvI1LeXr\r\n1qgdNdK5j+UFab8CAwEAAaMjMCEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF\r\nMAMBAf8wDQYJKoZIhvcNAQEMBQADggGBANTmtRXQo1KxhFS0/sZmGQw1MeKgZyxC\r\notOv42qVokxDiN3/3xGb+BbPlB8KodXKl06g7bzse8H6LtRiYHwnNeZQO7HkYBKM\r\nMktlw5s1TKXYwZUGbEPd+bQk5qP90nqxhIwyHB2J8AG7WY5PzM0/+7djx3kuMLL/\r\nPKA+89Wp0TMj7grm1OwIFo85lkFzpKGHnP0aVkSFLDRuVISFd04DNwhx/3QCVau4\r\nP7tJElPLFP1MjGDYLlNV3X/nxAs6dnQ6m/iVCWuRP2C5n0MdlfbxVbDBbbtlqEHS\r\nhjMgS8Db2bAtpJWHsTiEDguy0AR0AsyJPu3JtYu1Nf1oDDOXSskpcHxdVIcLjzVR\r\nZa039KnQ/1wM2mwgkfDzyWg8Le+v39vxBHCovYjWn4y17zqvvfuHZP30nFskj3Yn\r\nHFWCwoEaJamN2T7O4ZY/Wsdgn3bSfbrITGCMbg/GfoY8/b9YYutYpks+Y0Obh82R\r\nrSjBvJytZ6iQoMusk+TknSkRQSiLsFOAVw==\r\n-----END CERTIFICATE-----"
						},
						"url": {
							"raw": "https://{{kbs}}:{{kbsPort}}/kbs/v1/saml-certificates",
							"protocol": "https",
							"host": [
								"{{kbs}}"
							],
							"port": "{{kbsPort}}",
							"path": [
								"kbs",
								"v1",
								"saml-certificates"
							]
						},
						"description": "</b>Imports a saml certificate.</b>\n<pre>\nThis method registers a SAML public key certificate to this service. During the SAML transfer\nkey API call, a SAML report containing the same SAML certificate is provided and the\ncertificate is compared and verified against the SAML certificates registered with this service.\nThe certificate object model includes an ID, base64 encoded certificate and a revoked status.\n</pre>\n\nUse cat to display the SAML certificate content:\n\n```shell\ncat /etc/hvs/certs/trustedca/saml-cert.pem\n```\nUse the SAML certificate output in the following POST call to the Key Broker"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) Content-Type header",
										"key": "Content-Type",
										"value": "application/x-pem-file"
									},
									{
										"description": "(Required) Accept header",
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "-----BEGIN CERTIFICATE-----\r\nMIID/DCCAmSgAwIBAgIBCDANBgkqhkiG9w0BAQwFADBQMQswCQYDVQQGEwJVUzEL\r\nMAkGA1UECBMCU0YxCzAJBgNVBAcTAlNDMQ4wDAYDVQQKEwVJTlRFTDEXMBUGA1UE\r\nAxMOQ01TIFNpZ25pbmcgQ0EwHhcNMjAxMTEwMDYwODMyWhcNMjExMTEwMDYwODMy\r\nWjAfMR0wGwYDVQQDExRIVlMgU0FNTCBDZXJ0aWZpY2F0ZTCCAaIwDQYJKoZIhvcN\r\nAQEBBQADggGPADCCAYoCggGBALG5M2nM1ScmjSnRRrJRdE754ko3up3k1th4Cmk/\r\nYTeIsJvJYCO8xbCsox/tgoPSTTCj12PnZjByOB6KUVx3D6jb8iQvT7PQTg71GCP5\r\n77120OJ3ktw8W2jdMFM3fSEvSGo7e3xA7OOqFyKwpMxAByxGTxF3s0QsxoyPGI+e\r\ncGBz9oZYSqsBl0ZvU63+5EPn7GDeh0K39JeL+GWGlGdPzRrPKP8PU/W98GHcdqQ1\r\nv2IeROIJcWWtJIQgo8uL7Lzd2UIZ9qjgeTcYNyOSDGfY+wB1w9WCE3h05uL4JX2Z\r\nlj9zUKrF3pw1wBLahl4X28GZ/WkZoaC430BHMLm6EJtOZDMYI/PuoVxTcZ75mnVN\r\nRKaDCbopmVleKwDPijU541dE84yCZx0E4SmmQfgCoXpJZczQSpInDbcGJOP8cFIe\r\nHumCtgUJ5OR7ikoJGskP/feAYsOOYhl6AigNshNWhHFO1KwTS0rXIp5rqYDtC3Y9\r\nInc7oDzNteTMIqVfA5e+EjtOvwIDAQABoxIwEDAOBgNVHQ8BAf8EBAMCBsAwDQYJ\r\nKoZIhvcNAQEMBQADggGBAJGdaLl1R4sx2tNt/yvaMVWYGxm1Tm7fi0Ll876/nRjJ\r\nnHN64FtTzUkKsD4pMud9RWlMY2OcIJrPN7BwhpZo9l1P/ZcMsXWxJTN6CPcAC8FP\r\nO5KDZCLv7z3mxzVnntSzIqSkLy7ZqUGxEjk7tNRnFiyLUPnD9k7YLH30BlHwuKPt\r\nfSuQ2Ybpj8ZD88+skUXe63oDm7sySSxfLtgfyKDjRH8Nk8loKl+reCaeP79u+3dG\r\nvpeXFKY0zGVs5dXta5luZJFJT0JbxosHNqZ5s7z7T5uKiFYkNzaXpIrJyR4hh14U\r\nmw46atGq1x3qJN3feyZ4v0c6HgbRalv29FYBTIxfjdTqcw4j7OjaJjZIiPpNsrcE\r\nrAYfJpNbOs9k0pGad5vnwFXvj5pXSlhKYpQTxXhFHrVCvTIKFtpPZ0Oy+9lJGLUS\r\nMDK1I/s2NHmiASY1f6HrVMvLgR5llzsE8b49hD9OxwuC9u6QmK21xGn3nTMqn59o\r\nSp6d3ucIM9wUmWXlJivFDQ==\r\n-----END CERTIFICATE-----\r\n-----BEGIN CERTIFICATE-----\r\nMIIENTCCAp2gAwIBAgIBAzANBgkqhkiG9w0BAQwFADBHMQswCQYDVQQGEwJVUzEL\r\nMAkGA1UECBMCU0YxCzAJBgNVBAcTAlNDMQ4wDAYDVQQKEwVJTlRFTDEOMAwGA1UE\r\nAxMFQ01TQ0EwHhcNMjAxMTEwMDU0OTAyWhcNMjUxMTEwMDU0OTAyWjBQMQswCQYD\r\nVQQGEwJVUzELMAkGA1UECBMCU0YxCzAJBgNVBAcTAlNDMQ4wDAYDVQQKEwVJTlRF\r\nTDEXMBUGA1UEAxMOQ01TIFNpZ25pbmcgQ0EwggGiMA0GCSqGSIb3DQEBAQUAA4IB\r\njwAwggGKAoIBgQDa6v44xjW8AP+Zukv4+N5cV683OMmPcuS+igkD2md5FVXVS18T\r\nDERsNV2+LsWoq1e7wnfTAVw3+JSDStm4Tm4NTgOGQ4x/gSP0RuJPk/BvcLqzZTMQ\r\n3Vnt24COO5nZMAGhKS2wXXwzjSo/253RKh0DOLi5bdBTF8vvCKQHh8evC7oOfwMX\r\nl03kc8HlKF9i/MfzARuOY8/oLt5MbcMvSWwTL2a/3sf7pwrya3lYahl1CpFgqeO9\r\nFxFN1fjyhYSDhiwbii0NHK2rbWADsUBmAxb66quxgWErWskUEdCIdCN15wWr15mI\r\nNDHBZch1gRwiJzsFlKJD26CEGGGVmDrtI/k/0TMbEBxMQ2tcxy3pgzO8YXFgKS1p\r\nkesLHHfFGv9hBI71+p7Rtxopui93vekFhwwweF80PZ1Q3JaqpHfT0AbKcmL7VM9y\r\nFiXBYCQyN54grzluPXVKjinZJ+Ik9Y1eEqg7rhDC/I5DrAWfrcdtCdv0bvI1LeXr\r\n1qgdNdK5j+UFab8CAwEAAaMjMCEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF\r\nMAMBAf8wDQYJKoZIhvcNAQEMBQADggGBANTmtRXQo1KxhFS0/sZmGQw1MeKgZyxC\r\notOv42qVokxDiN3/3xGb+BbPlB8KodXKl06g7bzse8H6LtRiYHwnNeZQO7HkYBKM\r\nMktlw5s1TKXYwZUGbEPd+bQk5qP90nqxhIwyHB2J8AG7WY5PzM0/+7djx3kuMLL/\r\nPKA+89Wp0TMj7grm1OwIFo85lkFzpKGHnP0aVkSFLDRuVISFd04DNwhx/3QCVau4\r\nP7tJElPLFP1MjGDYLlNV3X/nxAs6dnQ6m/iVCWuRP2C5n0MdlfbxVbDBbbtlqEHS\r\nhjMgS8Db2bAtpJWHsTiEDguy0AR0AsyJPu3JtYu1Nf1oDDOXSskpcHxdVIcLjzVR\r\nZa039KnQ/1wM2mwgkfDzyWg8Le+v39vxBHCovYjWn4y17zqvvfuHZP30nFskj3Yn\r\nHFWCwoEaJamN2T7O4ZY/Wsdgn3bSfbrITGCMbg/GfoY8/b9YYutYpks+Y0Obh82R\r\nrSjBvJytZ6iQoMusk+TknSkRQSiLsFOAVw==\r\n-----END CERTIFICATE-----"
								},
								"url": {
									"raw": "https://{{kbs}}:{{kbsPort}}/kbs/v1/saml-certificates",
									"protocol": "https",
									"host": [
										"{{kbs}}"
									],
									"port": "{{kbsPort}}",
									"path": [
										"kbs",
										"v1",
										"saml-certificates"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 11 Nov 2020 10:07:14 GMT"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1c72e75e-75af-46cc-bd18-9e89290639c0\",\n    \"certificate\": \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlEL0RDQ0FtU2dBd0lCQWdJQkNEQU5CZ2txaGtpRzl3MEJBUXdGQURCUU1Rc3dDUVlEVlFRR0V3SlZVekVMDQpNQWtHQTFVRUNCTUNVMFl4Q3pBSkJnTlZCQWNUQWxORE1RNHdEQVlEVlFRS0V3VkpUbFJGVERFWE1CVUdBMVVFDQpBeE1PUTAxVElGTnBaMjVwYm1jZ1EwRXdIaGNOTWpBeE1URXdNRFl3T0RNeVdoY05NakV4TVRFd01EWXdPRE15DQpXakFmTVIwd0d3WURWUVFERXhSSVZsTWdVMEZOVENCRFpYSjBhV1pwWTJGMFpUQ0NBYUl3RFFZSktvWklodmNODQpBUUVCQlFBRGdnR1BBRENDQVlvQ2dnR0JBTEc1TTJuTTFTY21qU25SUnJKUmRFNzU0a28zdXAzazF0aDRDbWsvDQpZVGVJc0p2SllDTzh4YkNzb3gvdGdvUFNUVENqMTJQblpqQnlPQjZLVVZ4M0Q2amI4aVF2VDdQUVRnNzFHQ1A1DQo3NzEyME9KM2t0dzhXMmpkTUZNM2ZTRXZTR283ZTN4QTdPT3FGeUt3cE14QUJ5eEdUeEYzczBRc3hveVBHSStlDQpjR0J6OW9aWVNxc0JsMFp2VTYzKzVFUG43R0RlaDBLMzlKZUwrR1dHbEdkUHpSclBLUDhQVS9XOThHSGNkcVExDQp2MkllUk9JSmNXV3RKSVFnbzh1TDdMemQyVUlaOXFqZ2VUY1lOeU9TREdmWSt3QjF3OVdDRTNoMDV1TDRKWDJaDQpsajl6VUtyRjNwdzF3QkxhaGw0WDI4R1ovV2tab2FDNDMwQkhNTG02RUp0T1pETVlJL1B1b1Z4VGNaNzVtblZODQpSS2FEQ2JvcG1WbGVLd0RQaWpVNTQxZEU4NHlDWngwRTRTbW1RZmdDb1hwSlpjelFTcEluRGJjR0pPUDhjRkllDQpIdW1DdGdVSjVPUjdpa29KR3NrUC9mZUFZc09PWWhsNkFpZ05zaE5XaEhGTzFLd1RTMHJYSXA1cnFZRHRDM1k5DQpJbmM3b0R6TnRlVE1JcVZmQTVlK0VqdE92d0lEQVFBQm94SXdFREFPQmdOVkhROEJBZjhFQkFNQ0JzQXdEUVlKDQpLb1pJaHZjTkFRRU1CUUFEZ2dHQkFKR2RhTGwxUjRzeDJ0TnQveXZhTVZXWUd4bTFUbTdmaTBMbDg3Ni9uUmpKDQpuSE42NEZ0VHpVa0tzRDRwTXVkOVJXbE1ZMk9jSUpyUE43QndocFpvOWwxUC9aY01zWFd4SlRONkNQY0FDOEZQDQpPNUtEWkNMdjd6M214elZubnRTeklxU2tMeTdacVVHeEVqazd0TlJuRml5TFVQbkQ5azdZTEgzMEJsSHd1S1B0DQpmU3VRMllicGo4WkQ4OCtza1VYZTYzb0RtN3N5U1N4Zkx0Z2Z5S0RqUkg4Tms4bG9LbCtyZUNhZVA3OXUrM2RHDQp2cGVYRktZMHpHVnM1ZFh0YTVsdVpKRkpUMEpieG9zSE5xWjVzN3o3VDV1S2lGWWtOemFYcElySnlSNGhoMTRVDQptdzQ2YXRHcTF4M3FKTjNmZXlaNHYwYzZIZ2JSYWx2MjlGWUJUSXhmamRUcWN3NGo3T2phSmpaSWlQcE5zcmNFDQpyQVlmSnBOYk9zOWswcEdhZDV2bndGWHZqNXBYU2xoS1lwUVR4WGhGSHJWQ3ZUSUtGdHBQWjBPeSs5bEpHTFVTDQpNREsxSS9zMk5IbWlBU1kxZjZIclZNdkxnUjVsbHpzRThiNDloRDlPeHd1Qzl1NlFtSzIxeEduM25UTXFuNTlvDQpTcDZkM3VjSU05d1VtV1hsSml2RkRRPT0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQ0KTUlJRU5UQ0NBcDJnQXdJQkFnSUJBekFOQmdrcWhraUc5dzBCQVF3RkFEQkhNUXN3Q1FZRFZRUUdFd0pWVXpFTA0KTUFrR0ExVUVDQk1DVTBZeEN6QUpCZ05WQkFjVEFsTkRNUTR3REFZRFZRUUtFd1ZKVGxSRlRERU9NQXdHQTFVRQ0KQXhNRlEwMVRRMEV3SGhjTk1qQXhNVEV3TURVME9UQXlXaGNOTWpVeE1URXdNRFUwT1RBeVdqQlFNUXN3Q1FZRA0KVlFRR0V3SlZVekVMTUFrR0ExVUVDQk1DVTBZeEN6QUpCZ05WQkFjVEFsTkRNUTR3REFZRFZRUUtFd1ZKVGxSRg0KVERFWE1CVUdBMVVFQXhNT1EwMVRJRk5wWjI1cGJtY2dRMEV3Z2dHaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQg0KandBd2dnR0tBb0lCZ1FEYTZ2NDR4alc4QVArWnVrdjQrTjVjVjY4M09NbVBjdVMraWdrRDJtZDVGVlhWUzE4VA0KREVSc05WMitMc1dvcTFlN3duZlRBVnczK0pTRFN0bTRUbTROVGdPR1E0eC9nU1AwUnVKUGsvQnZjTHF6WlRNUQ0KM1ZudDI0Q09PNW5aTUFHaEtTMndYWHd6alNvLzI1M1JLaDBET0xpNWJkQlRGOHZ2Q0tRSGg4ZXZDN29PZndNWA0KbDAza2M4SGxLRjlpL01mekFSdU9ZOC9vTHQ1TWJjTXZTV3dUTDJhLzNzZjdwd3J5YTNsWWFobDFDcEZncWVPOQ0KRnhGTjFmanloWVNEaGl3YmlpME5ISzJyYldBRHNVQm1BeGI2NnF1eGdXRXJXc2tVRWRDSWRDTjE1d1dyMTVtSQ0KTkRIQlpjaDFnUndpSnpzRmxLSkQyNkNFR0dHVm1EcnRJL2svMFRNYkVCeE1RMnRjeHkzcGd6TzhZWEZnS1MxcA0Ka2VzTEhIZkZHdjloQkk3MStwN1J0eG9wdWk5M3Zla0Zod3d3ZUY4MFBaMVEzSmFxcEhmVDBBYktjbUw3Vk05eQ0KRmlYQllDUXlONTRncnpsdVBYVktqaW5aSitJazlZMWVFcWc3cmhEQy9JNURyQVdmcmNkdENkdjBidkkxTGVYcg0KMXFnZE5kSzVqK1VGYWI4Q0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0VHTUE4R0ExVWRFd0VCL3dRRg0KTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVNQlFBRGdnR0JBTlRtdFJYUW8xS3hoRlMwL3NabUdRdzFNZUtnWnl4Qw0Kb3RPdjQycVZva3hEaU4zLzN4R2IrQmJQbEI4S29kWEtsMDZnN2J6c2U4SDZMdFJpWUh3bk5lWlFPN0hrWUJLTQ0KTWt0bHc1czFUS1hZd1pVR2JFUGQrYlFrNXFQOTBucXhoSXd5SEIySjhBRzdXWTVQek0wLys3ZGp4M2t1TUxMLw0KUEtBKzg5V3AwVE1qN2dybTFPd0lGbzg1bGtGenBLR0huUDBhVmtTRkxEUnVWSVNGZDA0RE53aHgvM1FDVmF1NA0KUDd0SkVsUExGUDFNakdEWUxsTlYzWC9ueEFzNmRuUTZtL2lWQ1d1UlAyQzVuME1kbGZieFZiREJiYnRscUVIUw0KaGpNZ1M4RGIyYkF0cEpXSHNUaUVEZ3V5MEFSMEFzeUpQdTNKdFl1MU5mMW9ERE9YU3NrcGNIeGRWSWNManpWUg0KWmEwMzlLblEvMXdNMm13Z2tmRHp5V2c4TGUrdjM5dnhCSENvdllqV240eTE3enF2dmZ1SFpQMzBuRnNrajNZbg0KSEZXQ3dvRWFKYW1OMlQ3TzRaWS9Xc2RnbjNiU2ZicklUR0NNYmcvR2ZvWTgvYjlZWXV0WXBrcytZME9iaDgyUg0KclNqQnZKeXRaNmlRb011c2srVGtuU2tSUVNpTHNGT0FWdz09DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t\",\n    \"revoked\": false\n}"
						}
					]
				},
				{
					"name": "Import Tpm Identity Certificate",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) Content-Type header",
								"key": "Content-Type",
								"value": "application/x-pem-file"
							},
							{
								"description": "(Required) Accept header",
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "-----BEGIN CERTIFICATE-----\r\nMIID/jCCAmagAwIBAgIQaywjb049veHFaF1LglnoPTANBgkqhkiG9w0BAQsFADAi\r\nMSAwHgYDVQQDExdIVlMgUHJpdmFjeSBDZXJ0aWZpY2F0ZTAeFw0yMDExMTAwNjA4\r\nMzVaFw0yNTExMTAwNjA4MzVaMCIxIDAeBgNVBAMTF0hWUyBQcml2YWN5IENlcnRp\r\nZmljYXRlMIIBojANBgkqhkiG9w0BAQEFAAOCAY8AMIIBigKCAYEAtubJ824Z04I2\r\nRad1Y0FW9qySBgI1daoG9H6rSPU00Vu5gsiAlMVNMuqNBE9FFJrCTcD0GsPHdsPw\r\neKTVRQl4us9XvlqbjK2J6d3XQhcQ6ypokeZSFyO+XhsfujQDK2zXcnUOn26Za06z\r\nH23Umh37Pa8zw8g6IXT1Nt1gWDGgXp0QMLkD7Xc3vl8MD1A596G0i+hUmau0XlDA\r\nv03jSWCkoDcUnQ0VKvA6qe26t+3MuU++eNMpaijqSgzZX5x41U3Cl8urkT0tzueu\r\nVQVywLZNoEjiFxAiZmnKJp8C5QGr+a6gr9d/qF9k4gJdnz0pGZwpEhS79E+7bPpd\r\nltLdXfBpXelOYGqQnyVzLeRwJPzU5TlksDUAYTX4QMwSOiwJJFBaC0f8LRdPst9q\r\npTIOx6hPjJTLkizscTZTiF9SKoMODwCCCVf8mHzT94WPd/37mmysA+90pyrihrnY\r\nMZzhD4c0i6SRLER+Dc+o2phkjXtMhHBVrGM2dVvaoN9gk2PBsQGfAgMBAAGjMDAu\r\nMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MAsGA1UdEQQEMAKCADAN\r\nBgkqhkiG9w0BAQsFAAOCAYEAVfyDjpNPbJ9he8CO4h/uQCQbq2TNoUQeAGXWTNwB\r\nmP1AiICX0OFEdZapxwXrrj53RihauNJr33MVrVs3hh/ThhVPNI3z5k2MiRmJL+ID\r\nXDorzAWoR8OMDZOskLYhxT+9qwk/HBpq5stc7D2AzuiWyZCpJiERMZeksi4XgTlC\r\nf8MDn8hFXIjnY1Ap9HNt1A+eLec/DJdlRiBgZtKDGDAQDNKd3Jg99zR96E6rRHC4\r\n2cT+lnLO0YzCn53I2eEuDx18AnheWF+1hZHvQ8TTCcSCKk1la1hFpFtbuDCJZCHZ\r\nweV+TT4qgWqy69uvs086aSwBGqtr1/kf6JecxTRm4hTRPc8SLhvnyLP/bE0062kC\r\n/lNQ5/UEYJgmy+bD885BGq+pnoCbTme7hireddksRB1MgwdRhfxrvjuFhU6PExaN\r\nafyOyr1pBQNCoxJrvJmQdHmbQyTrtedEgWaDc/9SBHSMTaQpbiIwpgfPhrSN8BpO\r\nqufMEA1q/Kqzr9et4n1FTa7s\r\n-----END CERTIFICATE-----"
						},
						"url": {
							"raw": "https://{{kbs}}:{{kbsPort}}/kbs/v1/tpm-identity-certificates",
							"protocol": "https",
							"host": [
								"{{kbs}}"
							],
							"port": "{{kbsPort}}",
							"path": [
								"kbs",
								"v1",
								"tpm-identity-certificates"
							]
						},
						"description": "</b>Imports a privacy-ca certificate.</b>\n<pre>\nThis method registers a HVS privacy-ca public key certificate to the service. During the\nSAML transfer key API call, a SAML report containing a host TPM AIK certificate is provided.\nIt is verified that a HVS privacy-ca certificate registered with this service has signed this\nAIK. The binding key certificate is retrieved from the SAML report and it verifies that a\nHVS privacy-ca certificate has signed this cert as well. The certificate object model includes\nan ID, base64 encoded certificate and a revoked status.\n</pre>\n\nUse OpenSSL to display the PrivacyCA certificate content:\n\n```shell\nopenssl x509 -in /etc/hvs/certs/trustedca/privacy-ca/privacy-ca-cert.pem\n```\n\nUse the PrivacyCA certificate output in the following POST call\nto the Key Broker"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) Content-Type header",
										"key": "Content-Type",
										"value": "application/x-pem-file"
									},
									{
										"description": "(Required) Accept header",
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "-----BEGIN CERTIFICATE-----\r\nMIID/zCCAmegAwIBAgIRANE3MIDovA5c+tGhxlfdosswDQYJKoZIhvcNAQELBQAw\r\nIjEgMB4GA1UEAxMXSFZTIFByaXZhY3kgQ2VydGlmaWNhdGUwHhcNMjAwOTIxMTYx\r\nNjUwWhcNMjUwOTIxMTYxNjUwWjAiMSAwHgYDVQQDExdIVlMgUHJpdmFjeSBDZXJ0\r\naWZpY2F0ZTCCAaIwDQYJKoZIhvcNAQEBBQADggGPADCCAYoCggGBANdDpOyazYx9\r\n/O5AJOc7W+DkvueHacfDmGdw2yCJPDyZbqY75pJI0lt/WaJWywuirvALjKvqS9q8\r\n6BNcgyg38eTYWzoUQrOVL3Z/lNbsAZTQoK092fscOzaVjShju7MJuNvyMkhtXms8\r\n0VMkrlPPviADmTCukhnHhraJot0Ahb4CMia4CLKBfAnlZ3dOoWrJV46cORy14Lnj\r\nx0BkxSUYKadpBf7bVCA64DOGiWstbpPVlaPiXY8PIW6AFSeI2RCIgptQ84NCNp3Q\r\nhjauO5pbTI0VnvwXGiMsKFPztz80Vkm3OvcyBv9Yi7qbU7z+Lfs8m7olMiG5LhwV\r\naTEEWRC3kM+ppRjam6W6rQPwAHpzp6MdoY7+SiYlrhHeVywk5Mr4/JaSmAo6zAJT\r\ne+vVUs4lWlARDYMI4wOBL9rdViNGF7fTm0rfgqawfk/1r/97fSQUlnxP/b5JJfxE\r\nd5z7R5maBfu+rOYTaVictd+ALfsWaGDH1qcZo4FPk6EZ83jf+MMwBwIDAQABozAw\r\nLjAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zALBgNVHREEBDACggAw\r\nDQYJKoZIhvcNAQELBQADggGBAEN6+PZgn2QSUfRp+LWNwsMoI+gUTX7TgDGhjt+/\r\nTJuCZZU/Y4YtCnzy6aca8cSSYncKznXuNByzwBp/WZ/PcConhyY/pSgfpdt+HYYK\r\n3N+vp35RlfiViKjFf1p/ZG6dS3qA2KwqvFXaNv71113s9mbW8D30OG38tHC4iN80\r\nVtvQq734WfrfSVAjjgY9H6dXMn9oRR7tf9Z4R4Q49iJDFOOUOy92yUkopqfPMooS\r\nCOQ7mrEJWSgTPBsMirX0X3IV1c06/uQV+mMz28iT3MTFydf+JEsQBALZLIGj2XMV\r\nwTQX0JkOSvBbMVujW+7bTZKJJwfXcgZGyMBlvTFm8WWem3AyvZxpvZKwQiXKkC/6\r\nURGHm4kKVjuK7DNRSs1uOTavzzhoZ3eWm0iYU1RjMtKcrjWUCsKUBSkNtgfIKDSg\r\n4ncIrBBI89WO+y8rsGW3ZiJEOYzxKIEdI1D0muEq27XxjtSHVPrnw3yOAdEYm9xt\r\nRd/xbkDMtn7S2B3m28u9DLseBA==\r\n-----END CERTIFICATE-----"
								},
								"url": {
									"raw": "https://{{kbs}}:{{kbsPort}}/kbs/v1/tpm-identity-certificates",
									"protocol": "https",
									"host": [
										"{{kbs}}"
									],
									"port": "{{kbsPort}}",
									"path": [
										"kbs",
										"v1",
										"tpm-identity-certificates"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 11 Nov 2020 09:53:35 GMT"
								},
								{
									"key": "Content-Length",
									"value": "2039"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"b368f95e-ed13-4d10-8016-d248f9ce94a1\",\n    \"certificate\": \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlEL3pDQ0FtZWdBd0lCQWdJUkFORTNNSURvdkE1Yyt0R2h4bGZkb3Nzd0RRWUpLb1pJaHZjTkFRRUxCUUF3DQpJakVnTUI0R0ExVUVBeE1YU0ZaVElGQnlhWFpoWTNrZ1EyVnlkR2xtYVdOaGRHVXdIaGNOTWpBd09USXhNVFl4DQpOalV3V2hjTk1qVXdPVEl4TVRZeE5qVXdXakFpTVNBd0hnWURWUVFERXhkSVZsTWdVSEpwZG1GamVTQkRaWEowDQphV1pwWTJGMFpUQ0NBYUl3RFFZSktvWklodmNOQVFFQkJRQURnZ0dQQURDQ0FZb0NnZ0dCQU5kRHBPeWF6WXg5DQovTzVBSk9jN1crRGt2dWVIYWNmRG1HZHcyeUNKUER5WmJxWTc1cEpJMGx0L1dhSld5d3VpcnZBTGpLdnFTOXE4DQo2Qk5jZ3lnMzhlVFlXem9VUXJPVkwzWi9sTmJzQVpUUW9LMDkyZnNjT3phVmpTaGp1N01KdU52eU1raHRYbXM4DQowVk1rcmxQUHZpQURtVEN1a2huSGhyYUpvdDBBaGI0Q01pYTRDTEtCZkFubFozZE9vV3JKVjQ2Y09SeTE0TG5qDQp4MEJreFNVWUthZHBCZjdiVkNBNjRET0dpV3N0YnBQVmxhUGlYWThQSVc2QUZTZUkyUkNJZ3B0UTg0TkNOcDNRDQpoamF1TzVwYlRJMFZudndYR2lNc0tGUHp0ejgwVmttM092Y3lCdjlZaTdxYlU3eitMZnM4bTdvbE1pRzVMaHdWDQphVEVFV1JDM2tNK3BwUmphbTZXNnJRUHdBSHB6cDZNZG9ZNytTaVlscmhIZVZ5d2s1TXI0L0phU21BbzZ6QUpUDQplK3ZWVXM0bFdsQVJEWU1JNHdPQkw5cmRWaU5HRjdmVG0wcmZncWF3ZmsvMXIvOTdmU1FVbG54UC9iNUpKZnhFDQpkNXo3UjVtYUJmdStyT1lUYVZpY3RkK0FMZnNXYUdESDFxY1pvNEZQazZFWjgzamYrTU13QndJREFRQUJvekF3DQpMakFPQmdOVkhROEJBZjhFQkFNQ0FRWXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QUxCZ05WSFJFRUJEQUNnZ0F3DQpEUVlKS29aSWh2Y05BUUVMQlFBRGdnR0JBRU42K1BaZ24yUVNVZlJwK0xXTndzTW9JK2dVVFg3VGdER2hqdCsvDQpUSnVDWlpVL1k0WXRDbnp5NmFjYThjU1NZbmNLem5YdU5CeXp3QnAvV1ovUGNDb25oeVkvcFNnZnBkdCtIWVlLDQozTit2cDM1UmxmaVZpS2pGZjFwL1pHNmRTM3FBMkt3cXZGWGFOdjcxMTEzczltYlc4RDMwT0czOHRIQzRpTjgwDQpWdHZRcTczNFdmcmZTVkFqamdZOUg2ZFhNbjlvUlI3dGY5WjRSNFE0OWlKREZPT1VPeTkyeVVrb3BxZlBNb29TDQpDT1E3bXJFSldTZ1RQQnNNaXJYMFgzSVYxYzA2L3VRVittTXoyOGlUM01URnlkZitKRXNRQkFMWkxJR2oyWE1WDQp3VFFYMEprT1N2QmJNVnVqVys3YlRaS0pKd2ZYY2daR3lNQmx2VEZtOFdXZW0zQXl2WnhwdlpLd1FpWEtrQy82DQpVUkdIbTRrS1ZqdUs3RE5SU3MxdU9UYXZ6emhvWjNlV20waVlVMVJqTXRLY3JqV1VDc0tVQlNrTnRnZklLRFNnDQo0bmNJckJCSTg5V08reThyc0dXM1ppSkVPWXp4S0lFZEkxRDBtdUVxMjdYeGp0U0hWUHJudzN5T0FkRVltOXh0DQpSZC94YmtETXRuN1MyQjNtMjh1OURMc2VCQT09DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t\",\n    \"revoked\": false\n}"
						}
					]
				}
			],
			"description": "After installation, the Key Broker must import the SAML and PrivacyCA certificates from any Verification\r\nServices it will trust. This provides the Key Broker a way to ensure that only attestations that come from\r\n\"known\" Verification Service. The SAML and PrivacyCA certificates needed can be found on the Verification\r\nService.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Encrypting an Image",
			"item": [],
			"description": "The first step is encryption of a Docker Container image. The WPM is a command line utility that will perform the actual image encryption and allow the resulting encrypted image to be uploaded to a Docker Registry.\n\nThe commands needed are slightly different depending on whether Notary is being used to validate container integrity.\n\nIf Notary is not being used:\n\n```shell\nwpm create-container-image-flavor -i <container_image_name> -t <tag_name> -e -f <path>/Dockerfile -d <path>\n```\nIf Notary is being used:\n\n```shell\nwpm create-container-image-flavor -i <container_image_name> -t <tag_name> -e -s -n https://<notaryIP>:<notaryPort> -f <path>/Dockerfile -d <path>\n```\n\nAlso, if Notary is being used, set the following environment variable before uploading the image to the Registry:\n\n```export DOCKER_CONTENT_TRUST=1```\n\nAfter generating the encrypted image with the WPM, the encrypted image must be uploaded to a local/remote Docker Registry.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "29530f72-5e55-45d8-a3b1-81c5377003d3"
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "c52cb8b8-1de4-4cfe-afa4-0fd42457012e"
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Uploading the Image Flavor ",
			"item": [
				{
					"name": "createFlavor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d8fff27c-7203-4e76-9c93-8eb58e9a7ef0",
								"exec": [
									"pm.environment.set(\"flavorId\", pm.response.json().flavor.meta.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"description": "Enter your bearer token in the format **Bearer &lt;token&gt;**",
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "{Required}"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"description": "{Required}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"flavor\": {\n        \"meta\": {\n            \"id\": \"dfa22f83-b6dd-4bf3-9b07-ff1fa01eb69f\",\n            \"description\": {\n                \"flavor_part\": \"CONTAINER_IMAGE\",\n                \"label\": \"simplehttpserverenc:enc_v1\"\n            }\n        },\n        \"encryption_required\": true,\n        \"encryption\": {\n            \"key_url\": \"https://10.105.168.43:9443/v1/keys/f4a01eb5-8523-4b15-a4d2-34635c9e0754/transfer\"\n        },\n        \"integrity_enforced\": false,\n        \"integrity\": {}\n    },\n    \"signature\": \"N6J8yVIW5XT2KCudY2ShL7MlR2vffOg/olf/QFJKEiu5qAQri254G9LSkQ53CX3KrHQdNXpZdEcYfhunEnzIS3IOuihACCIBeN1Wz0ly0aWEraV21/e1kVeTOFuG8CJQqli00a1XkMFpn2Ik6NNbnwHQ/wUohxqjQ8MRunMP/Aj2rtWmZqDowL9ZjLpvS6Lk/AmfkPq/ai8zdv4uhoaIZZBs9SGQUPWiejhMeHNdjoP+t/D5SCuRJ7bsMBmw9F5ctUwgwS9gy9ThDUUhevQmoBpdFybkc+CU2xO0U/J+alqPO54nytPOLy7aU99SSD68N30jYkYdm+0ORXSMRk3raKcf9zAO8M3hWqctaKsfnMAJTaLvOzo7zNrIf1zoEfIAjJYWgjWUSgtzh5t0sPQOUh9Szrwl6daom0re6vHK/FWGr3fO7PvpJIQkzOXoDXKdM4H/ueEXl5y53bHQ0d/1P2DJfLOV7Lx1g+MrcaTolzgbQ7QQXlA4NL4je/zUY+qZ\"\n}"
						},
						"url": {
							"raw": "https://{{wls}}:{{wlsPort}}/wls/v1/flavors",
							"protocol": "https",
							"host": [
								"{{wls}}"
							],
							"port": "{{wlsPort}}",
							"path": [
								"wls",
								"v1",
								"flavors"
							]
						},
						"description": "Creates a flavor for the encrypted image in the workload service database. \nFlavor can be created by providing the image flavor content obtained from the WPM after encrypting the image.\nA valid bearer token should be provided to authorize this REST call.\n"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Enter your bearer token in the format **Bearer &lt;token&gt;**",
										"key": "Authorization",
										"value": "Bearer {{bearerToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "{Required}"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"description": "{Required}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"flavor\": {\n        \"meta\": {\n            \"id\": \"178fa54b-7391-46c5-8d16-15d67be9fabf\",\n            \"description\": {\n                \"flavor_part\": \"CONTAINER_IMAGE\",\n                \"label\": \"simplehttpserverenc:enc_v1\"\n            }\n        },\n        \"encryption_required\": true,\n        \"encryption\": {\n            \"key_url\": \"https://10.105.168.90:9443/v1/keys/eb61b2e9-c7cd-4476-ac5f-71582c892112/transfer\"\n        },\n        \"integrity_enforced\": false,\n        \"integrity\": {}\n    },\n    \"signature\": \"j+oWOaXsdX/rUUHbRtCEy6m14ve5bQ8ex/LU6PSB+d9dxaiuLQw5l8XMHhb7XPfrKi99fQ+mfmRuP1vdyIpT9C4e7wKwqXIZgMboxZUWeD7+Kmkjy1H9OeLjJJ7Dclm9iASFLSvBHG1hCfOvWA2dj8atVy8nfwMN5fnozVsZIv/K0SXtfEqirZmezYge7K8uHpLFRgDnRj80xUEIlCETB1nPiLJwmqLxp4BHlm6mStwBRpXsse4vNeQc6tslfctHIANGIYct7sh5TwlVbyjBn6/6Cceuw2JSRQEnETuO3h4MxiE0ImZMYqGXT2qX9mFmzDcMubLu2tCd9rApu10bT3xxwarXvvdJy9DRcwdeV7krNFdSagLCRJ4/lAdP1IZCUxrb0Z/MwJnaP3XHPj2uQDv2+06gXl7Voyp6Z8aJFNhUhgWyQkbuUJeqkNaMDNuLG5X8x4AFi/UXfp7dZiiarTOnFsi9XKqVPdaBW8Zcr8sJZ+P1zE47Bp1eSCT6skhS\"\n}"
								},
								"url": {
									"raw": "https://{{wls}}:{{wlsPort}}/wls/flavors",
									"protocol": "https",
									"host": [
										"{{wls}}"
									],
									"port": "{{wlsPort}}",
									"path": [
										"wls",
										"flavors"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Tue, 15 Sep 2020 09:32:00 GMT"
								},
								{
									"key": "Content-Length",
									"value": "328"
								}
							],
							"cookie": [],
							"body": "{\n    \"flavor\": {\n        \"meta\": {\n            \"id\": \"178fa54b-7391-46c5-8d16-15d67be9fabf\",\n            \"description\": {\n                \"flavor_part\": \"CONTAINER_IMAGE\",\n                \"label\": \"simplehttpserverenc:enc_v1\"\n            }\n        },\n        \"encryption_required\": true,\n        \"encryption\": {\n            \"key_url\": \"https://<kbs>:<kbs_port>/v1/keys/eb61b2e9-c7cd-4476-ac5f-71582c892112/transfer\"\n        },\n        \"integrity_enforced\": false,\n        \"integrity\": {}\n    }\n}"
						}
					]
				}
			],
			"description": "Use this API request to upload the Image Flavor to the WLS. The Image Flavor will tell other Intel® SecL-DC components the Key Transfer URL for this image.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "bf764c7e-4561-4bfe-be5a-7c797faf50e0"
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "432d5fc8-55dc-43c8-b789-35c716adabdc"
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Creating the Image Flavor to Image ID Association ",
			"item": [
				{
					"name": "createImage",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"description": "Enter your bearer token in the format **Bearer &lt;token&gt;**",
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "{Required}"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"description": "{Required}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"flavor_ids\": [\n        \"{{flavorId}}\"\n    ],\n    \"id\": \"{{imageId}}\"\n}"
						},
						"url": {
							"raw": "https://{{wls}}:{{wlsPort}}/wls/v1/images",
							"protocol": "https",
							"host": [
								"{{wls}}"
							],
							"port": "{{wlsPort}}",
							"path": [
								"wls",
								"v1",
								"images"
							]
						},
						"description": "Creates an association between the image and flavor(s) in the workload service database. \nAn image id from the image storage and flavor id(s) should be provided in the request body.\nA valid bearer token should be provided to authorize this REST call.\n"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Enter your bearer token in the format **Bearer &lt;token&gt;**",
										"key": "Authorization",
										"value": "Bearer {{bearerToken}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"description": "{Required}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"description": "{Required}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"flavor_ids\": [\n        \"{{flavorId}}\"\n    ],\n    \"id\": \"{{imageId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{wls}}:{{wlsPort}}/wls/images",
									"protocol": "https",
									"host": [
										"{{wls}}"
									],
									"port": "{{wlsPort}}",
									"path": [
										"wls",
										"images"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Tue, 08 Sep 2020 17:48:58 GMT"
								},
								{
									"key": "Content-Length",
									"value": "100"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"{{imageId}}\",\n    \"flavor_ids\": [\n        \"{{flavorId}}\"\n    ]\n}"
						}
					]
				}
			],
			"description": "For Docker images stored in a Docker Registry, the ID is typically an MD5 hash. This format must be converted for use with the Workload Service. To get the non-truncated ID of the image, use the Docker command: \n \n```docker images --no-trunc```\n\nNext, convert this to a UUID that can be used by Intel® SecL:\n\n```wpm get-container-image-id <image-full-md5id>```\n \nThe output will be a UUID, which will be considered the ID of the image for the WLS. \n\nUse the below API request to create an association between the Image Flavor\ncreated in the previous step and the image ID.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "069dfcc0-8ebe-4601-afb1-6b1ab9357f7d"
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "53140c3f-714f-40a5-8afd-5b4723e76bf5"
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Launching Encrypted Docker Containers",
			"item": [],
			"description": "Containers of the protected images can now be launched as normal using Kubernetes pods and deployments. Encrypted images will only be accessible on hosts with a Platform Integrity Attestation report showing the host is trusted.\r\n\r\nIf the Docker Container is launched on a host that is not trusted, the launch will fail, as the decryption key will not be provided.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "e9a59327-35c7-452d-acc5-e9c1d2b39835"
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "3db905d5-add6-4dd7-a475-fa6b0cb0d020"
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "408649a1-87cf-4a4b-8d75-9b2c264a7dd2"
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "ca6f7131-b744-429e-9030-9889f6bd2876"
			}
		}
	],
	"protocolProfileBehavior": {}
}