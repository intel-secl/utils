bin: app skc orchestration

OS := $(shell cat /etc/os-release | grep ^ID= | cut -d'=' -f2)

skc_services:
	cd intel-secl && make cms-installer && make authservice-installer && make aas-manager
	cd utils/build/skc-tools/common_attest/tee/build_scripts && ./install_tee_pre_req.sh
	cd intel-secl-tee && make qvs-installer
	cd intel-secl-tee && make aps-installer
	cd intel-secl-tee && make apc-installer
	cd intel-secl-tee && make tcs-installer
	mkdir -p binaries/env
	cp -pf utils/build/skc-tools/config binaries/
	cp intel-secl/deployments/installer/*.bin binaries/
	cp intel-secl/deployments/installer/create_db.sh binaries/
	cp intel-secl/deployments/installer/populate-users.sh binaries/
	cp intel-secl/tools/aas-manager/populate-users.env binaries/env
	cp intel-secl-tee/deployments/installer/*.bin binaries/
	cp intel-secl-tee/deployments/installer/*.env binaries/env
	cp intel-secl/build/linux/cms/cms.env binaries/env
	cp intel-secl/build/linux/authservice/authservice.env binaries/env
	cp intel-secl/build/linux/kbs/kbs.env binaries/env
	cp intel-secl/build/linux/ihub/ihub.env binaries/env
	cp -pf utils/build/skc-tools/skc_scripts/env/install_pgdb.sh binaries/
	cp -pf utils/build/skc-tools/skc_scripts/env/iseclpgdb.env binaries/env
	cp -pf utils/build/skc-tools/common_attest/skc_scripts/install_*.sh binaries/
	cp -pf utils/build/skc-tools/common_attest/skc_scripts/*.conf binaries/

attestation: clean fd_agent skc_services
	cp utils/build/skc-tools/common_attest/fd_agent/build_scripts/fd_agent.* binaries/
	cp utils/build/skc-tools/common_attest/fd_agent/fd_agent_untar.sh binaries/

app: attestation
	cd utils/build/skc-tools/common_attest/tee/build_scripts && ./install_dcap_addtnl_preq.sh
	cd intel-secl-tee && make sgx-agent-installer
	cp intel-secl-tee/deployments/installer/sgx-agent-*.bin binaries/

skc: attestation skc_library
	cd intel-secl && make kbs-installer
	cp intel-secl/deployments/installer/kbs-*.bin binaries/
	cp -rpf utils/build/skc-tools/kbs_script/ binaries/
	cp utils/build/skc-tools/common_attest/skc_library/build_scripts/skc_library.* binaries/
	cp utils/build/skc-tools/skc_library/skclib_untar.sh binaries/

orchestration: attestation
	cd intel-secl && make ihub-installer && make isecl-k8s-extensions-installer
	cd intel-secl-tee && make fds-installer
	cp intel-secl/deployments/installer/ihub-*.bin binaries/
	cp intel-secl-tee/deployments/installer/fds-*.bin binaries/
	cp intel-secl/installer/isecl-k8s-extensions-v*.tar.gz binaries/

fd_agent:
	cd utils/build/skc-tools/common_attest/fd_agent/build_scripts/ && ./fdagent_build.sh
	
skc_library:
	cd utils/build/skc-tools/common_attest/skc_library/build_scripts/ && ./skc_library_build.sh

sgx_agent:
	cd utils/build/skc-tools/common_attest/tee/build_scripts && ./install_dcap_addtnl_preq.sh
	cd intel-secl-tee && make sgx-agent-installer

intel_secl_tee_k8s:
	cd utils/build/skc-tools/common_attest/tee/build_scripts && ./install_tee_pre_req.sh
	cd intel-secl-tee && mkdir -p deployments/k8s
	if [ "$(OS)" = "rhel" ]; then \
		cd intel-secl-tee && make qvs-k8s ;\
	fi
	cd intel-secl-tee && make fda-k8s && make aps-k8s && make tcs-k8s && make fds-k8s && make apc-installer

intel_secl_k8s:
	cd intel-secl && make authservice-k8s && make cms-k8s && make ihub-k8s && make kbs-k8s && make aas-manager-k8s && make isecl-k8s-extensions-installer

skc_library_k8s_deploy:
	mkdir -p k8s/manifests/
	mkdir -p k8s/container-images/
	cp -pf utils/build/skc-tools/config k8s/manifests/
	cp -r utils/build/skc-tools/skc_library/custom-claim-token utils/build/skc-tools/skc_k8s/skc_library/resources/
	cp -r utils/build/skc-tools/kbs_script k8s/manifests/
	cp -r utils/build/skc-tools/skc_k8s/skc_library k8s/manifests/skc_library
	cp -r utils/build/skc-tools/skc_k8s/skc-bootstrap.sh k8s/manifests/skc-bootstrap.sh
	cp utils/build/skc-tools/skc_k8s/isecl-skc-k8s.env k8s/manifests/isecl-skc-k8s.env

skc_library_k8s:
	mkdir -p k8s/manifests/
	mkdir -p k8s/container-images/
	cd utils/build/skc-tools/common_attest/skc_library/build_scripts/ && ./build_skc_docker.sh
	cp skc_library/out/skc*.tar k8s/container-images/
	cp -pf utils/build/skc-tools/config k8s/manifests/
	cp -r utils/build/skc-tools/skc_library/custom-claim-token utils/build/skc-tools/skc_k8s/skc_library/resources/
	cp -r utils/build/skc-tools/kbs_script k8s/manifests/
	cp -r utils/build/skc-tools/skc_k8s/skc_library k8s/manifests/skc_library
	cp -r utils/build/skc-tools/skc_k8s/skc-bootstrap.sh k8s/manifests/skc-bootstrap.sh
	cp utils/build/skc-tools/skc_k8s/isecl-skc-k8s.env k8s/manifests/isecl-skc-k8s.env

k8s_common: clean intel_secl_k8s intel_secl_tee_k8s skc_library_k8s sgx_agent k8s_common_services

k8s_common_services:
	mkdir -p k8s/container-images
	cp -r intel-secl/deployments/container-archive/oci/*.tar k8s/container-images/
	cp -r intel-secl-tee/deployments/container-archive/oci/*.tar k8s/container-images/
	cp skc_library/out/*.tar k8s/container-images/
	cp -r intel-secl-tee/deployments/installer/*.bin k8s/container-images/
	cp -r intel-secl-tee/deployments/installer/apc.env k8s/container-images/

k8s: k8s_common

clean:
	cd intel-secl && make clean
	cd intel-secl-tee && make clean
	rm -rf binaries/
	rm -rf k8s/

.PHONY: all clean attestation app skc orchestration fd_agent skc_library skc_services skc_library_k8s_deploy skc_library_k8s
