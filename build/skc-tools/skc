ubuntu_k8s:
	OS := $(shell cat /etc/os-release | grep ^ID= | cut -d'=' -f2)
	os_ubuntu := $(shell if [ "${OS}" = "ubuntu" ]; then echo 1; else echo 0; fi)
	ifeq ($(os_ubuntu), 1)
	     $(error ***Currently all the components have to be build on RHEL machines for containers***)
	endif

bin: app skc orchestrator

attest: clean sgx_agent
	cd intel-secl && make cms-installer && make authservice-installer && make aas-manager
	cd sgx-caching-service && make installer
	cd sgx-verification-service && make installer
	mkdir -p binaries/env
	cp intel-secl/deployments/installer/*.bin binaries/
	cp intel-secl/deployments/installer/create_db.sh binaries/
	cp intel-secl/deployments/installer/populate-users.sh binaries/
	cp intel-secl/tools/aas-manager/populate-users.env binaries/env
	cp sgx-caching-service/out/*.bin binaries/
	cp sgx-caching-service/dist/linux/scs.env binaries/env
	cp sgx-verification-service/out/*.bin binaries/
	cp sgx-verification-service/dist/linux/sqvs.env binaries/env
	cp sgx-verification-service/dist/linux/trusted_rootca.pem binaries/
	cp utils/build/skc-tools/sgx_agent/build_scripts/sgx_agent.* binaries/
	cp utils/build/skc-tools/sgx_agent/agent_untar.sh binaries/
	cp -pf utils/build/skc-tools/config binaries/
	cp -pf utils/build/skc-tools/skc_scripts/env/*.env binaries/env
	cp -pf utils/build/skc-tools/skc_scripts/env/install_pgdb.sh binaries/
	cp -pf utils/build/skc-tools/skc_scripts/install_*.sh binaries/
	cp -pf utils/build/skc-tools/skc_scripts/*.conf binaries/

app: attest
	cd utils/build/skc-tools/sample_apps/build_scripts/ && ./sample_apps_build.sh
	cp utils/build/skc-tools/sample_apps/build_scripts/sample_apps.* binaries/
	cp utils/build/skc-tools/sample_apps/sampleapps_untar.sh binaries/

skc: attest skc_library
	cd intel-secl && make kbs-installer
	cp intel-secl/deployments/installer/kbs-*.bin binaries/
	cp -rpf utils/build/skc-tools/kbs_script/ binaries/
	cp utils/build/skc-tools/skc_library/build_scripts/skc_library.* binaries/
	cp utils/build/skc-tools/skc_library/skclib_untar.sh binaries/

orchestrator: attest
	cd intel-secl && make ihub-installer
	cd sgx-hvs && make installer
	cd k8s-extensions && make all
	cp intel-secl/deployments/installer/ihub-*.bin binaries/
	cp sgx-hvs/out/*.bin binaries/
	cp sgx-hvs/dist/linux/shvs.env binaries/env
	cp k8s-extensions/out/isecl-k8s-extensions-*.tar.gz binaries/

k8s-aio: ubuntu_k8s k8s_common
	cp -r utils/build/k8s-manifests/db-deployments/single-node/aas-db k8s/manifests/
	cp -r utils/build/k8s-manifests/db-deployments/single-node/skc/* k8s/manifests/
	cp -r utils/build/k8s-manifests/single-node/* k8s/manifests/
	cp -r utils/build/skc-tools/skc_k8s/single-node/* k8s/manifests/
	cp -r utils/build/skc-tools/skc_k8s/trusted_rootca_files k8s/manifests/sqvs/
	mkdir -p k8s/manifests/aas/scripts
	cp intel-secl/deployments/k8s/aas/populate-users k8s/manifests/aas/scripts/
	cp intel-secl/deployments/k8s/aas/populate-users.env k8s/manifests/aas/scripts/populate-users.env

k8s: ubuntu_k8s k8s_common
	cp -r utils/build/k8s-manifests/db-deployments/multi-node/aas-db k8s/manifests/
	cp -r utils/build/k8s-manifests/db-deployments/multi-node/skc/* k8s/manifests/
	cp -r intel-secl/deployments/k8s/* k8s/manifests/
	cp -r utils/build/skc-tools/skc_k8s/create-skc-dirs-nfs.sh k8s/
	cp -r sgx-caching-service/out/k8s k8s/manifests/scs
	cp -r sgx-verification-service/out/k8s k8s/manifests/sqvs
	cp -r utils/build/skc-tools/skc_k8s/trusted_rootca_files k8s/manifests/sqvs/
	cp -r sgx-hvs/out/k8s k8s/manifests/shvs
	mkdir -p k8s/manifests/aas/scripts
	mv k8s/manifests/aas/populate-users k8s/manifests/aas/scripts/
	mv k8s/manifests/aas/populate-users.env k8s/manifests/aas/scripts/

clean:
	cd intel-secl && make clean
	cd sgx-caching-service && make clean
	cd sgx-verification-service && make clean
	cd sgx_agent && make clean
	cd sgx-hvs && make clean
	cd k8s-extensions && make clean
	rm -rf binaries/
	rm -rf k8s/

sgx_agent:
	cd utils/build/skc-tools/sgx_agent/build_scripts/ && ./sgxagent_build.sh
	
skc_library:
	cd utils/build/skc-tools/skc_library/build_scripts/ && ./skc_library_build.sh

skc_k8s: ubuntu_k8s
	cd sgx-caching-service && make k8s
	cd sgx-hvs && make k8s
	cd sgx-verification-service && make k8s

intel_secl_k8s: ubuntu_k8s
	cd intel-secl && make authservice-k8s && make cms-k8s && make ihub-k8s && make kbs-k8s

sgx_agent_k8s: ubuntu_k8s
	cd utils/build/skc-tools/sgx_agent/build_scripts/ && ./build_sgx_agent_docker.sh

skc_library_k8s: ubuntu_k8s
	cd utils/build/skc-tools/skc_library/build_scripts/ && ./build_skc_docker.sh

k8s_extensions: 
	cd k8s-extensions && make all

k8s_common: ubuntu_k8s clean intel_secl_k8s skc_k8s k8s_extensions sgx_agent_k8s skc_library_k8s app
	mkdir -p k8s/container-images
	mkdir -p k8s/manifests
	mkdir -p k8s/platform-dependencies
	mkdir -p k8s/sample_apps
	cp utils/build/skc-tools/sample_apps/build_scripts/sample_apps.* k8s/sample_apps/
	cp utils/build/skc-tools/sample_apps/sampleapps_untar.sh k8s/sample_apps/
	cp -r utils/build/skc-tools/sgx_agent/agent_untar.sh k8s/platform-dependencies/
	cp -r utils/build/skc-tools/sgx_agent/build_scripts/sgx_agent.* k8s/platform-dependencies/
	cp -r utils/build/skc-tools/sgx_agent/deploy_scripts/agent_container_prereq.sh k8s/platform-dependencies/
	cp -r utils/build/skc-tools/sgx_agent/deploy_scripts/deployment_prerequisites.sh k8s/platform-dependencies/
	cp -r utils/build/skc-tools/skc_k8s/pre-requisites.sh k8s/manifests/
	cp -pf utils/build/skc-tools/config k8s/manifests/
	cp -r utils/build/skc-tools/skc_k8s/skc-bootstrap-db-services.sh k8s/manifests/skc-bootstrap-db-services.sh
	cp -r utils/build/skc-tools/skc_k8s/sgx_agent k8s/manifests/sgx_agent
	cp  utils/build/skc-tools/skc_library/deploy_scripts/create_roles.conf utils/build/skc-tools/skc_k8s/skc_library/resources/
	cp  utils/build/skc-tools/skc_library/deploy_scripts/skc_library_create_roles.sh utils/build/skc-tools/skc_k8s/skc_library/resources/
	cp  utils/build/skc-tools/skc_library/deploy_scripts/skc_library.conf utils/build/skc-tools/skc_k8s/skc_library/resources/
	cp -r utils/build/skc-tools/skc_k8s/skc_library k8s/manifests/skc_library
	cp -r utils/build/k8s-manifests/k8s-extensions-controller k8s/manifests/
	cp -r utils/build/k8s-manifests/k8s-extensions-scheduler k8s/manifests/
	cp -r utils/build/skc-tools/skc_k8s/skc-bootstrap.sh k8s/manifests/skc-bootstrap.sh
	cp utils/build/skc-tools/skc_k8s/isecl-skc-k8s.env k8s/manifests/isecl-skc-k8s.env
	cp -r intel-secl/deployments/container-archive/oci/*.tar k8s/container-images/
	mkdir -p k8s/manifests/aas/scripts
	cp -r utils/build/skc-tools/kbs_script k8s/manifests/kbs/
	cp k8s-extensions/out/isecl-k8s-extensions/*.tar k8s/container-images/
	cp sgx-caching-service/out/*.tar k8s/container-images/
	cp sgx-verification-service/out/*.tar k8s/container-images/
	cp sgx-hvs/out/*.tar k8s/container-images/
	cp sgx_agent/out/*.tar k8s/container-images/
	cp skc_library/out/*.tar k8s/container-images/

.PHONY: all clean attest app skc orchestrator sgx_agent skc_library
